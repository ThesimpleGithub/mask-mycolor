(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[458],{8818:function(t,e,n){(function(){"use strict";function t(t){var e=0;return function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}}}var e,r="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){return t==Array.prototype||t==Object.prototype||(t[e]=n.value),t},a=function(t){t=["object"==typeof globalThis&&globalThis,t,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var e=0;e<t.length;++e){var r=t[e];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function i(t,e){if(e)t:{var n=a;t=t.split(".");for(var i=0;i<t.length-1;i++){var s=t[i];if(!(s in n))break t;n=n[s]}(e=e(i=n[t=t[t.length-1]]))!=i&&null!=e&&r(n,t,{configurable:!0,writable:!0,value:e})}}function s(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function o(t){if(!(t instanceof Array)){t=s(t);for(var e,n=[];!(e=t.next()).done;)n.push(e.value);t=n}return t}i("Symbol",function(t){function e(t,e){this.g=t,r(this,"description",{configurable:!0,writable:!0,value:e})}if(t)return t;e.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function t(r){if(this instanceof t)throw TypeError("Symbol is not a constructor");return new e(n+(r||"")+"_"+a++,r)}}),i("Symbol.iterator",function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<n.length;i++){var s=a[n[i]];"function"==typeof s&&"function"!=typeof s.prototype[e]&&r(s.prototype,e,{configurable:!0,writable:!0,value:function(){var e;return(e={next:e=t(this)})[Symbol.iterator]=function(){return this},e}})}return e});var u,p,l="function"==typeof Object.create?Object.create:function(t){function e(){}return e.prototype=t,new e};if("function"==typeof Object.setPrototypeOf)p=Object.setPrototypeOf;else{t:{var c={};try{c.__proto__={a:!0},E=c.a;break t}catch(h){}E=!1}p=E?function(t,e){if(t.__proto__=e,t.__proto__!==e)throw TypeError(t+" is not extensible");return t}:null}var m=p;function f(t,e){if(t.prototype=l(e.prototype),t.prototype.constructor=t,m)m(t,e);else for(var n in e)if("prototype"!=n){if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(e,n);r&&Object.defineProperty(t,n,r)}else t[n]=e[n]}t.ea=e.prototype}function d(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function y(t){if(t.l)throw TypeError("Generator is already running");t.l=!0}function g(t,e){t.j={U:e,V:!0},t.g=t.m||t.s}function v(t,e,n){return t.g=n,{value:e}}function b(t){this.g=new d,this.h=t}function x(t,e,n,r){try{var a=e.call(t.g.i,n);if(!(a instanceof Object))throw TypeError("Iterator result "+a+" is not an object");if(!a.done)return t.g.l=!1,a;var i=a.value}catch(s){return t.g.i=null,g(t.g,s),N(t)}return t.g.i=null,r.call(t.g,i),N(t)}function N(t){for(;t.g.g;)try{var e=t.h(t.g);if(e)return t.g.l=!1,{value:e.value,done:!1}}catch(n){t.g.h=void 0,g(t.g,n)}if(t.g.l=!1,t.g.j){if(e=t.g.j,t.g.j=null,e.V)throw e.U;return{value:e.return,done:!0}}return{value:void 0,done:!0}}function T(t){this.next=function(e){return y(t.g),t.g.i?e=x(t,t.g.i.next,e,t.g.o):(t.g.o(e),e=N(t)),e},this.throw=function(e){return y(t.g),t.g.i?e=x(t,t.g.i.throw,e,t.g.o):(g(t.g,e),e=N(t)),e},this.return=function(e){var n;return y(t.g),(n=t.g.i)?x(t,"return"in n?n.return:function(t){return{value:t,done:!0}},e,t.g.return):(t.g.return(e),N(t))},this[Symbol.iterator]=function(){return this}}function w(t,e){return e=new T(new b(e)),m&&t.prototype&&m(e,t.prototype),e}d.prototype.o=function(t){this.h=t},d.prototype.return=function(t){this.j={return:t},this.g=this.s};var S="function"==typeof Object.assign?Object.assign:function(t,e){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(t[a]=r[a])}return t};i("Object.assign",function(t){return t||S}),i("Promise",function(t){function e(t){this.h=0,this.i=void 0,this.g=[],this.o=!1;var e=this.j();try{t(e.resolve,e.reject)}catch(n){e.reject(n)}}function n(){this.g=null}function r(t){return t instanceof e?t:new e(function(e){e(t)})}if(t)return t;n.prototype.h=function(t){if(null==this.g){this.g=[];var e=this;this.i(function(){e.l()})}this.g.push(t)};var i=a.setTimeout;n.prototype.i=function(t){i(t,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var t=this.g;this.g=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(r){this.j(r)}}}this.g=null},n.prototype.j=function(t){this.i(function(){throw t})},e.prototype.j=function(){function t(t){return function(r){n||(n=!0,t.call(e,r))}}var e=this,n=!1;return{resolve:t(this.C),reject:t(this.l)}},e.prototype.C=function(t){if(t===this)this.l(TypeError("A Promise cannot resolve to itself"));else if(t instanceof e)this.F(t);else{t:switch(typeof t){case"object":var n=null!=t;break t;case"function":n=!0;break t;default:n=!1}n?this.u(t):this.m(t)}},e.prototype.u=function(t){var e=void 0;try{e=t.then}catch(n){this.l(n);return}"function"==typeof e?this.G(e,t):this.m(t)},e.prototype.l=function(t){this.s(2,t)},e.prototype.m=function(t){this.s(1,t)},e.prototype.s=function(t,e){if(0!=this.h)throw Error("Cannot settle("+t+", "+e+"): Promise already settled in state"+this.h);this.h=t,this.i=e,2===this.h&&this.D(),this.A()},e.prototype.D=function(){var t=this;i(function(){if(t.B()){var e=a.console;void 0!==e&&e.error(t.i)}},1)},e.prototype.B=function(){if(this.o)return!1;var t=a.CustomEvent,e=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof t?t=new t("unhandledrejection",{cancelable:!0}):"function"==typeof e?t=new e("unhandledrejection",{cancelable:!0}):(t=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,t),t.promise=this,t.reason=this.i,n(t))},e.prototype.A=function(){if(null!=this.g){for(var t=0;t<this.g.length;++t)o.h(this.g[t]);this.g=null}};var o=new n;return e.prototype.F=function(t){var e=this.j();t.J(e.resolve,e.reject)},e.prototype.G=function(t,e){var n=this.j();try{t.call(e,n.resolve,n.reject)}catch(r){n.reject(r)}},e.prototype.then=function(t,n){function r(t,e){return"function"==typeof t?function(e){try{a(t(e))}catch(n){i(n)}}:e}var a,i,s=new e(function(t,e){a=t,i=e});return this.J(r(t,a),r(n,i)),s},e.prototype.catch=function(t){return this.then(void 0,t)},e.prototype.J=function(t,e){function n(){switch(r.h){case 1:t(r.i);break;case 2:e(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.o=!0},e.resolve=r,e.reject=function(t){return new e(function(e,n){n(t)})},e.race=function(t){return new e(function(e,n){for(var a=s(t),i=a.next();!i.done;i=a.next())r(i.value).J(e,n)})},e.all=function(t){var n=s(t),a=n.next();return a.done?r([]):new e(function(t,e){var i=[],s=0;do i.push(void 0),s++,r(a.value).J(function(e){return function(n){i[e]=n,0==--s&&t(i)}}(i.length-1),e),a=n.next();while(!a.done)})},e}),i("Object.is",function(t){return t||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}}),i("Array.prototype.includes",function(t){return t||function(t,e){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(e=e||0)&&(e=Math.max(e+r,0));e<r;e++){var a=n[e];if(a===t||Object.is(a,t))return!0}return!1}}),i("String.prototype.includes",function(t){return t||function(t,e){if(null==this)throw TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(t instanceof RegExp)throw TypeError("First argument to String.prototype.includes must not be a regular expression");return -1!==this.indexOf(t,e||0)}}),i("Array.prototype.keys",function(t){return t||function(){var t,e,n,r,a;return t=this,e=function(t){return t},t instanceof String&&(t+=""),n=0,r=!1,(a={next:function(){if(!r&&n<t.length){var a=n++;return{value:e(a,t[a]),done:!1}}return r=!0,{done:!0,value:void 0}}})[Symbol.iterator]=function(){return a},a}});var _=this||self;function O(t,e){t=t.split(".");var n,r=_;for((t[0]in r)||void 0===r.execScript||r.execScript("var "+t[0]);t.length&&(n=t.shift());)t.length||void 0===e?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=e}function A(t,e){return e=String.fromCharCode.apply(null,e),null==t?e:t+e}var E,M,k,I="undefined"!=typeof TextDecoder,D="undefined"!=typeof TextEncoder;function F(t){if(D)t=(k||(k=new TextEncoder)).encode(t);else{var e=void 0;e=void 0!==e&&e;for(var n=0,r=new Uint8Array(3*t.length),a=0;a<t.length;a++){var i=t.charCodeAt(a);if(128>i)r[n++]=i;else{if(2048>i)r[n++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&a<t.length){var s=t.charCodeAt(++a);if(56320<=s&&57343>=s){i=1024*(i-55296)+s-56320+65536,r[n++]=i>>18|240,r[n++]=i>>12&63|128,r[n++]=i>>6&63|128,r[n++]=63&i|128;continue}a--}if(e)throw Error("Found an unpaired surrogate");i=65533}r[n++]=i>>12|224,r[n++]=i>>6&63|128}r[n++]=63&i|128}}t=r.subarray(0,n)}return t}var C={},L=null;function R(t,e){void 0===e&&(e=0),j(),e=C[e];for(var n=Array(Math.floor(t.length/3)),r=e[64]||"",a=0,i=0;a<t.length-2;a+=3){var s=t[a],o=t[a+1],u=t[a+2],p=e[s>>2];s=e[(3&s)<<4|o>>4],o=e[(15&o)<<2|u>>6],u=e[63&u],n[i++]=p+s+o+u}switch(p=0,u=r,t.length-a){case 2:u=e[(15&(p=t[a+1]))<<2]||r;case 1:t=t[a],n[i]=e[t>>2]+e[(3&t)<<4|p>>4]+u+r}return n.join("")}function j(){if(!L){L={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=t.concat(e[n].split(""));C[n]=r;for(var a=0;a<r.length;a++){var i=r[a];void 0===L[i]&&(L[i]=a)}}}}var P,V="function"==typeof Uint8Array.prototype.slice;function B(t,e,n){return e===n?P||(P=new Uint8Array(0)):V?t.slice(e,n):new Uint8Array(t.subarray(e,n))}var z=0,U=0;function $(t,e){e=void 0!==(e=void 0===e?{}:e).v&&e.v,this.h=null,this.g=this.j=this.l=0,this.m=!1,this.v=e,t&&H(this,t)}function H(t,e){var n,r,a,i,s;e=e.constructor===Uint8Array?e:e.constructor===ArrayBuffer?new Uint8Array(e):e.constructor===Array?new Uint8Array(e):e.constructor===String?((a=3*(r=(n=e).length)/4)%3?a=Math.floor(a):-1!="=.".indexOf(n[r-1])&&(a=-1!="=.".indexOf(n[r-2])?a-2:a-1),i=new Uint8Array(a),s=0,function(t,e){function n(e){for(;r<t.length;){var n=t.charAt(r++),a=L[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}j();for(var r=0;;){var a=n(-1),i=n(0),s=n(64),o=n(64);if(64===o&&-1===a)break;e(a<<2|i>>4),64!=s&&(e(i<<4&240|s>>2),64!=o&&e(s<<6&192|o))}}(n,function(t){i[s++]=t}),i.subarray(0,s)):e instanceof Uint8Array?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t.h=e,t.l=0,t.j=t.h.length,t.g=t.l}function G(t){for(var e=128,n=0,r=0,a=0;4>a&&128<=e;a++)n|=(127&(e=t.h[t.g++]))<<7*a;if(128<=e&&(n|=(127&(e=t.h[t.g++]))<<28,r|=(127&e)>>4),128<=e)for(a=0;5>a&&128<=e;a++)r|=(127&(e=t.h[t.g++]))<<7*a+3;if(128>e)return t=n>>>0,(r=2147483648&(e=r>>>0))&&(e=~e>>>0,0==(t=~t+1>>>0)&&(e=e+1>>>0)),t=4294967296*e+(t>>>0),r?-t:t;t.m=!0}$.prototype.reset=function(){this.g=this.l},$.prototype.i=function(){var t=this.h,e=t[this.g],n=127&e;return 128>e?(this.g+=1,n):(n|=(127&(e=t[this.g+1]))<<7,128>e)?(this.g+=2,n):(n|=(127&(e=t[this.g+2]))<<14,128>e)?(this.g+=3,n):(n|=(127&(e=t[this.g+3]))<<21,128>e)?(this.g+=4,n):(n|=(15&(e=t[this.g+4]))<<28,128>e)?(this.g+=5,n>>>0):(this.g+=5,128<=t[this.g++]&&128<=t[this.g++]&&128<=t[this.g++]&&128<=t[this.g++]&&this.g++,n)},$.prototype.o=function(){var t=this.h[this.g],e=this.h[this.g+1],n=this.h[this.g+2],r=this.h[this.g+3];return this.g+=4,t=2*((n=(t<<0|e<<8|n<<16|r<<24)>>>0)>>31)+1,e=n>>>23&255,n&=8388607,255==e?n?NaN:1/0*t:0==e?1401298464324817e-60*t*n:t*Math.pow(2,e-150)*(n+8388608)};var W=[];function X(){this.g=new Uint8Array(64),this.h=0}function q(t,e){for(;127<e;)t.push(127&e|128),e>>>=7;t.push(e)}function K(t){var e={},n=void 0!==e.N&&e.N;this.o={v:void 0!==e.v&&e.v},this.N=n,e=this.o,W.length?(n=W.pop(),e&&(n.v=e.v),t&&H(n,t),t=n):t=new $(t,e),this.g=t,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function Y(t){var e=t.g;if((e=e.g==e.j)||(e=t.j)||(e=(e=t.g).m||0>e.g||e.g>e.j),e)return!1;t.m=t.g.g;var n=7&(e=t.g.i());return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(t.j=!0,!1):(t.i=e,t.l=e>>>3,t.h=n,!0)}function Q(t,e,n){var r=t.g.j,a=t.g.i(),i=t.g.g+a;if(t.g.j=i,n(e,t),0!=(n=i-t.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-n)+" bytes, either the data ended unexpectedly or the message misreported its own length");return t.g.g=i,t.g.j=r,e}function J(t){return t.g.o()}function Z(t){var e=t.g.i(),n=(t=t.g).g;if(t.g+=e,t=t.h,I)(r=M)||(r=M=new TextDecoder("utf-8",{fatal:!1})),r=r.decode(t.subarray(n,n+e));else{e=n+e;for(var r,a,i,s,o=[],u=null;n<e;)128>(a=t[n++])?o.push(a):224>a?n>=e?o.push(65533):(i=t[n++],194>a||128!=(192&i)?(n--,o.push(65533)):o.push((31&a)<<6|63&i)):240>a?n>=e-1?o.push(65533):128!=(192&(i=t[n++]))||224===a&&160>i||237===a&&160<=i||128!=(192&(r=t[n++]))?(n--,o.push(65533)):o.push((15&a)<<12|(63&i)<<6|63&r):244>=a?n>=e-2?o.push(65533):128!=(192&(i=t[n++]))||0!=(a<<28)+(i-144)>>30||128!=(192&(r=t[n++]))||128!=(192&(s=t[n++]))?(n--,o.push(65533)):(a=(7&a)<<18|(63&i)<<12|(63&r)<<6|63&s,a-=65536,o.push((a>>10&1023)+55296,(1023&a)+56320)):o.push(65533),8192<=o.length&&(u=A(u,o),o.length=0);r=A(u,o)}return r}function tt(t,e,n){var r=t.g.i();for(r=t.g.g+r;t.g.g<r;)n.push(e.call(t.g))}function te(t,e){2==t.h?tt(t,$.prototype.o,e):e.push(J(t))}function tn(){this.h=[],this.i=0,this.g=new X}function tr(t,e){0!==e.length&&(t.h.push(e),t.i+=e.length)}function ta(t){var e=t.i+t.g.length();if(0===e)return new Uint8Array(0);e=new Uint8Array(e);for(var n=t.h,r=n.length,a=0,i=0;i<r;i++){var s=n[i];0!==s.length&&(e.set(s,a),a+=s.length)}return 0!==(r=(n=t.g).h)&&(e.set(n.g.subarray(0,r),a),n.h=0),t.h=[e],e}function ti(t,e,n){if(null!=n){q(t.g,8*e+5),t=t.g;var r=n;0===(r=(n=0>r?1:0)?-r:r)?0<1/r?z=U=0:(U=0,z=2147483648):isNaN(r)?(U=0,z=2147483647):34028234663852886e22<r?(U=0,z=(n<<31|2139095040)>>>0):11754943508222875e-54>r?(U=0,z=(n<<31|(r=Math.round(r/1401298464324817e-60)))>>>0):(e=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-e),16777216<=(r=Math.round(8388608*r))&&++e,U=0,z=(n<<31|e+127<<23|8388607&r)>>>0),n=z,t.push(n>>>0&255),t.push(n>>>8&255),t.push(n>>>16&255),t.push(n>>>24&255)}}X.prototype.push=function(t){if(!(this.h+1<this.g.length)){var e=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(e)}this.g[this.h++]=t},X.prototype.length=function(){return this.h},X.prototype.end=function(){var t=this.g,e=this.h;return this.h=0,B(t,0,e)},K.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var ts="function"==typeof Uint8Array;function to(t,e,n){if(null!=t)return"object"==typeof t?ts&&t instanceof Uint8Array?n(t):tu(t,e,n):e(t)}function tu(t,e,n){if(Array.isArray(t)){for(var r=Array(t.length),a=0;a<t.length;a++)r[a]=to(t[a],e,n);return Array.isArray(t)&&t.W&&tc(r),r}for(a in r={},t)r[a]=to(t[a],e,n);return r}function tp(t){return"number"==typeof t?isFinite(t)?t:String(t):t}var tl={W:{value:!0,configurable:!0}};function tc(t){return Array.isArray(t)&&!Object.isFrozen(t)&&Object.defineProperties(t,tl),t}function th(t,n,r){var a=e;e=null,t||(t=a),a=this.constructor.ca,t||(t=a?[a]:[]),this.j=a?0:-1,this.m=this.g=null,this.h=t;t:{if(t=(a=this.h.length)-1,a&&!(null===(a=this.h[t])||"object"!=typeof a||Array.isArray(a)||ts&&a instanceof Uint8Array)){this.l=t-this.j,this.i=a;break t}void 0!==n&&-1<n?(this.l=Math.max(n,t+1-this.j),this.i=null):this.l=Number.MAX_VALUE}if(r)for(n=0;n<r.length;n++)(t=r[n])<this.l?(t+=this.j,(a=this.h[t])?tc(a):this.h[t]=tm):(tf(this),(a=this.i[t])?tc(a):this.i[t]=tm)}var tm=Object.freeze(tc([]));function tf(t){var e=t.l+t.j;t.h[e]||(t.i=t.h[e]={})}function td(t,e,n){return -1===e?null:(void 0===n?0:n)||e>=t.l?t.i?t.i[e]:void 0:t.h[e+t.j]}function ty(t,e){var n=void 0!==n&&n,r=td(t,e,n);return null==r&&(r=tm),r===tm&&tx(t,e,r=tc([]),n),r}function tg(t){var e=ty(t,3);if(t.m||(t.m={}),!t.m[3]){for(var n=0;n<e.length;n++)e[n]=+e[n];t.m[3]=!0}return e}function tv(t,e,n){return null==(t=td(t,e))?n:t}function tb(t,e,n){return null==(t=null==(t=td(t,e))?t:+t)?void 0===n?0:n:t}function tx(t,e,n,r){(void 0===r?0:r)||e>=t.l?(tf(t),t.i[e]=n):t.h[e+t.j]=n}function tN(t,e,n){if(-1===n)return null;if(t.g||(t.g={}),!t.g[n]){var r=td(t,n,!1);r&&(t.g[n]=new e(r))}return t.g[n]}function tT(t,e){t.g||(t.g={});var n=t.g[1];if(!n){var r=ty(t,1);n=[];for(var a=0;a<r.length;a++)n[a]=new e(r[a]);t.g[1]=n}return n}function tw(t,e,n){var r=void 0!==r&&r;t.g||(t.g={});var a=n?t_(n,!1):n;t.g[e]=n,tx(t,e,a,r)}function tS(t,e,n,r){var a=tT(t,n);e=e||new n,t=ty(t,1),void 0!=r?(a.splice(r,0,e),t.splice(r,0,t_(e,!1))):(a.push(e),t.push(t_(e,!1)))}function t_(t,e){if(t.g)for(var n in t.g){var r=t.g[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)r[a]&&t_(r[a],e);else r&&t_(r,e)}return t.h}function tO(t,e){if(t=t.o){tr(e,e.g.end());for(var n=0;n<t.length;n++)tr(e,t[n])}}function tA(t,e){if(4==e.h)return!1;var n=e.m;return!function t(e){switch(e.h){case 0:if(0!=e.h)t(e);else{for(e=e.g;128&e.h[e.g];)e.g++;e.g++}break;case 1:1!=e.h?t(e):(e=e.g,e.g+=8);break;case 2:if(2!=e.h)t(e);else{var n=e.g.i();e=e.g,e.g+=n}break;case 5:5!=e.h?t(e):(e=e.g,e.g+=4);break;case 3:for(n=e.l;;){if(!Y(e)){e.j=!0;break}if(4==e.h){e.l!=n&&(e.j=!0);break}t(e)}break;default:e.j=!0}}(e),e.N||(e=B(e.g.h,n,e.g.g),(n=t.o)?n.push(e):t.o=[e]),!0}function tE(t){th.call(this,t,-1,tk)}function tM(t,e){for(;Y(e);)switch(e.i){case 8:var n=e.g.i();tx(t,1,n);break;case 16:tx(t,2,n=e.g.i());break;case 29:case 26:te(e,t.getPackedDataList());break;case 32:tx(t,4,n=G(e.g));break;default:if(!tA(t,e))return t}return t}th.prototype.toJSON=function(){return tu(t_(this,!1),tp,R)},th.prototype.toString=function(){return t_(this,!1).toString()},f(tE,th),tE.prototype.getRows=function(){return td(this,1)},tE.prototype.getCols=function(){return td(this,2)},tE.prototype.getPackedDataList=function(){return tg(this)},tE.prototype.getLayout=function(){return tv(this,4,0)};var tk=[3];function tI(t,e){var n=void 0;return new(n||(n=Promise))(function(r,a){function i(t){try{o(e.next(t))}catch(n){a(n)}}function s(t){try{o(e.throw(t))}catch(n){a(n)}}function o(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(i,s)}o((e=e.apply(t,void 0)).next())})}function tD(t){th.call(this,t)}function tF(t,e){for(;Y(e);)switch(e.i){case 8:var n=e.g.i();tx(t,1,n);break;case 21:tx(t,2,n=J(e));break;case 26:tx(t,3,n=Z(e));break;case 34:tx(t,4,n=Z(e));break;default:if(!tA(t,e))return t}return t}function tC(t){th.call(this,t,-1,tL)}f(tD,th),f(tC,th),tC.prototype.addClassification=function(t,e){return tS(this,t,tD,e),this};var tL=[1];function tR(t){th.call(this,t)}function tj(t,e){for(;Y(e);)switch(e.i){case 13:var n=J(e);tx(t,1,n);break;case 21:tx(t,2,n=J(e));break;case 29:tx(t,3,n=J(e));break;case 37:tx(t,4,n=J(e));break;case 45:tx(t,5,n=J(e));break;default:if(!tA(t,e))return t}return t}function tP(t){th.call(this,t,-1,tB)}function tV(t){t:{var e=new tP;for(t=new K(t);Y(t);)if(10===t.i)tS(e,Q(t,new tR,tj),tR,void 0);else if(!tA(e,t))break t}return e}f(tR,th),f(tP,th);var tB=[1];function tz(t){th.call(this,t)}function tU(t){th.call(this,t,-1,tH)}function t$(t,e){for(;Y(e);)switch(e.i){case 8:var n=G(e.g);tx(t,1,n);break;case 16:tx(t,2,n=G(e.g));break;case 29:case 26:te(e,t.getVertexBufferList());break;case 32:case 34:n=e;var r=t.getIndexBufferList();2==n.h?tt(n,$.prototype.i,r):r.push(n.g.i());break;default:if(!tA(t,e))return t}return t}f(tz,th),f(tU,th),tU.prototype.getVertexType=function(){return tv(this,1,0)},tU.prototype.getPrimitiveType=function(){return tv(this,2,0)},tU.prototype.getVertexBufferList=function(){return tg(this)},tU.prototype.getIndexBufferList=function(){return ty(this,4)};var tH=[3,4];function tG(t){th.call(this,t)}function tW(t,e,n){if(n=t.createShader(0===n?t.VERTEX_SHADER:t.FRAGMENT_SHADER),t.shaderSource(n,e),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+t.getShaderInfoLog(n));return n}function tX(t){return{x:tb(t,1),y:tb(t,2),z:tb(t,3),visibility:null!=td(t,4)?tb(t,4):void 0}}function tq(t,e){this.h=t,this.g=e,this.l=0}function tK(t,e,n){return(function(t,e){var n=t.g;if(void 0===t.m){var r=tW(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=tW(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,a),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(i));r=t.m=i,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),t.j={I:n.getAttribLocation(r,"aVertex"),H:n.getAttribLocation(r,"aTex"),da:a},t.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.enableVertexAttribArray(t.j.I),n.vertexAttribPointer(t.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),t.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.o),n.enableVertexAttribArray(t.j.H),n.vertexAttribPointer(t.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=t.j,n.useProgram(t.m),n.canvas.width=e.width,n.canvas.height=e.height,n.viewport(0,0,e.width,e.height),n.activeTexture(n.TEXTURE0),t.h.bindTexture2d(e.glName),n.enableVertexAttribArray(r.I),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.vertexAttribPointer(r.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,t.o),n.vertexAttribPointer(r.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.I),n.disableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,null),t.h.bindTexture2d(0)}(t,e),"function"==typeof t.g.canvas.transferToImageBitmap)?Promise.resolve(t.g.canvas.transferToImageBitmap()):n?Promise.resolve(t.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(t.g.canvas):(void 0===t.i&&(t.i=document.createElement("canvas")),new Promise(function(e){t.i.height=t.g.canvas.height,t.i.width=t.g.canvas.width,t.i.getContext("2d",{}).drawImage(t.g.canvas,0,0,t.g.canvas.width,t.g.canvas.height),e(t.i)}))}function tY(t){this.g=t}f(tG,th),tG.prototype.getMesh=function(){return tN(this,tU,1)},tG.prototype.getPoseTransformMatrix=function(){return tN(this,tE,2)};var tQ=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function tJ(t,e){return e+t}function tZ(t){if(this.g=t,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=t&&t.locateFile||tJ,"object"==typeof window)var e=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if("undefined"!=typeof location)e=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.S=e,t.options){e=s(Object.keys(t.options));for(var n=e.next();!n.done;n=e.next()){n=n.value;var r=t.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}}function t1(t,e){return tI(t,function t(){var n,r,a=this;return w(t,function(t){return e in a.F?t.return(a.F[e]):(n=a.locateFile(e,""),r=fetch(n).then(function(t){return t.arrayBuffer()}),a.F[e]=r,t.return(r))})})}function t2(t){var e=(t=function(t){t:{var e=new tG;for(t=new K(t);Y(t);)switch(t.i){case 10:var n=Q(t,new tU,t$);tw(e,1,n);break;case 18:tw(e,2,n=Q(t,new tE,tM));break;default:if(!tA(e,t))break t}}return e}(t)).getMesh();if(!e)return t;var n=new Float32Array(e.getVertexBufferList());e.getVertexBufferList=function(){return n};var r=new Uint32Array(e.getIndexBufferList());return e.getIndexBufferList=function(){return r},t}(u=tZ.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},u.reset=function(){return tI(this,function t(){var e=this;return w(t,function(t){e.i&&(e.i.reset(),e.m={},e.s={}),t.g=0})})},u.setOptions=function(t,e){var n=this;if(e=e||this.g.options){for(var r=[],a=[],i={},o=s(Object.keys(t)),u=o.next();!u.done;i={K:i.K,L:i.L},u=o.next()){var p=u.value;p in this.j&&this.j[p]===t[p]||(this.j[p]=t[p],void 0!==(u=e[p])&&(u.onChange&&(i.K=u.onChange,i.L=t[p],r.push(function(t){return function(){return tI(n,function e(){var n=this;return w(e,function(e){if(1==e.g)return v(e,t.K(t.L),2);!0===e.h&&(n.o=!0),e.g=0})})}}(i))),u.graphOptionXref&&(p={valueNumber:1===u.type?t[p]:0,valueBoolean:0===u.type&&t[p],valueString:2===u.type?t[p]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),p),a.push(u))))}(0!==r.length||0!==a.length)&&(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(a),this.u=(void 0===this.u?[]:this.u).concat(r))}},u.initialize=function(){return tI(this,function t(){var e=this;return w(t,function(t){return 1==t.g?v(t,tI(e,function t(){var e,n,r,a,i,s,u,p,l,c,h,m=this;return w(t,function(t){var f,d,y;switch(t.g){case 1:if(e=m,!m.R)return t.return();return f=m.j,n=void 0===m.g.files?[]:"function"==typeof m.g.files?m.g.files(f):m.g.files,v(t,function(){return tI(this,function t(){return w(t,function(t){switch(t.g){case 1:return t.m=2,v(t,WebAssembly.instantiate(tQ),4);case 4:t.g=3,t.m=0;break;case 2:return t.m=0,t.j=null,t.return(!1);case 3:return t.return(!0)}})})}(),2);case 2:if(r=t.h,"object"==typeof window)return d={locateFile:m.locateFile},window.createMediapipeSolutionsWasm=d,y={locateFile:m.locateFile},window.createMediapipeSolutionsPackedAssets=y,s=n.filter(function(t){return void 0!==t.data}),u=n.filter(function(t){return void 0===t.data}),p=Promise.all(s.map(function(t){var n=t1(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then(function(t){return e.overrideFile(r,t),Promise.resolve(t)})}return n})),l=Promise.all(u.map(function(t){var n,a;return void 0===t.simd||t.simd&&r||!t.simd&&!r?(n=e.locateFile(t.url,e.S),(a=document.createElement("script")).setAttribute("src",n),a.setAttribute("crossorigin","anonymous"),new Promise(function(t){a.addEventListener("load",function(){t()},!1),a.addEventListener("error",function(){t()},!1),document.body.appendChild(a)})):Promise.resolve()})).then(function(){return tI(e,function t(){var e=this;return w(t,function(t){if(1==t.g)return v(t,(0,window.createMediapipeSolutionsWasm)(window.createMediapipeSolutionsPackedAssets),2);e.h=t.h,t.g=0})})}),c=tI(e,function t(){var e=this;return w(t,function(t){return e.g.graph&&e.g.graph.url?t=v(t,t1(e,e.g.graph.url),0):(t.g=0,t=void 0),t})}),v(t,Promise.all([l,p,c]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=n.filter(function(t){return void 0===t.simd||t.simd&&r||!t.simd&&!r}).map(function(t){return e.locateFile(t.url,e.S)}),importScripts.apply(null,o(a)),v(t,createMediapipeSolutionsWasm(Module),6);case 6:m.h=t.h,m.l=new OffscreenCanvas(1,1),m.h.canvas=m.l,i=m.h.GL.createContext(m.l,{antialias:!1,alpha:!1,ba:"undefined"!=typeof WebGL2RenderingContext?2:1}),m.h.GL.makeContextCurrent(i),t.g=4;break;case 7:if(m.l=document.createElement("canvas"),!(h=m.l.getContext("webgl2",{}))&&!(h=m.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),t.return();m.D=h,m.h.canvas=m.l,m.h.createContext(m.l,!0,!0,{});case 4:m.i=new m.h.SolutionWasm,m.R=!1,t.g=0}})}),2):3!=t.g?v(t,tI(e,function t(){var e,n,r,a,i,u,p,l=this;return w(t,function(t){if(1==t.g){if(l.g.graph&&l.g.graph.url&&l.P===l.g.graph.url)return t.return();if(l.o=!0,!l.g.graph||!l.g.graph.url){t.g=2;return}return l.P=l.g.graph.url,v(t,t1(l,l.g.graph.url),3)}for(2!=t.g&&(e=t.h,l.i.loadGraph(e)),r=(n=s(Object.keys(l.B))).next();!r.done;r=n.next())a=r.value,l.i.overrideFile(a,l.B[a]);if(l.B={},l.g.listeners)for(u=(i=s(l.g.listeners)).next();!u.done;u=i.next())(function(t,e){for(var n=e.name||"$",r=[].concat(o(e.wants)),a=new t.h.StringList,i=s(e.wants),u=i.next();!u.done;u=i.next())a.push_back(u.value);i=t.h.PacketListener.implement({onResults:function(a){for(var i,o={},u=0;u<e.wants.length;++u)o[r[u]]=a.get(u);var p=t.listeners[n];p&&(t.C=(i=e.outs,tI(t,function t(){var e,n,r,a,u,p,l,c,h,m,f,d,y,g=this;return w(t,function(t){switch(t.g){case 1:if(!i)return t.return(o);for(e={},n=0,a=(r=s(Object.keys(i))).next();!a.done;a=r.next())"string"!=typeof(u=i[a.value])&&"texture"===u.type&&void 0!==o[u.stream]&&++n;1<n&&(g.G=!1),a=(p=s(Object.keys(i))).next();case 2:if(a.done){t.g=4;break}if("string"==typeof(c=i[l=a.value]))return d=e,y=l,v(t,function(t,e,n){return tI(t,function t(){var r,a=this;return w(t,function(t){return"number"==typeof n||n instanceof Uint8Array||n instanceof a.h.Uint8BlobList?t.return(n):n instanceof a.h.Texture2dDataOut?((r=a.s[e])||(r=new tq(a.h,a.D),a.s[e]=r),t.return(tK(r,n,a.G))):t.return(void 0)})})}(g,l,o[c]),14);if(h=o[c.stream],"detection_list"===c.type){if(h){for(var b=h.getRectList(),x=h.getLandmarksList(),N=h.getClassificationsList(),T=[],S=0;S<b.size();++S){var _=b.get(S);t:{var O=new tz;for(_=new K(_);Y(_);)switch(_.i){case 13:var A=J(_);tx(O,1,A);break;case 21:tx(O,2,A=J(_));break;case 29:tx(O,3,A=J(_));break;case 37:tx(O,4,A=J(_));break;case 45:tx(O,5,A=J(_));break;case 48:tx(O,6,A=G(_.g));break;default:if(!tA(O,_))break t}}O={Z:tb(O,1),$:tb(O,2),height:tb(O,3),width:tb(O,4),rotation:tb(O,5,0),X:tv(O,6,0)},_=tT(tV(x.get(S)),tR).map(tX);var E=N.get(S);t:for(A=new tC,E=new K(E);Y(E);)if(10===E.i)A.addClassification(Q(E,new tD,tF));else if(!tA(A,E))break t;O={T:O,O:_,M:tT(A,tD).map(function(t){return{index:tv(t,1,0),Y:tb(t,2),label:null!=td(t,3)?tv(t,3,""):void 0,displayName:null!=td(t,4)?tv(t,4,""):void 0}})},T.push(O)}b=T}else b=[];e[l]=b,t.g=7;break}if("proto_list"===c.type){if(h){for(x=0,b=Array(h.size());x<h.size();x++)b[x]=h.get(x);h.delete()}else b=[];e[l]=b,t.g=7;break}if(void 0===h){t.g=3;break}if("float_list"===c.type||"proto"===c.type){e[l]=h,t.g=7;break}if("texture"!==c.type)throw Error("Unknown output config type: '"+c.type+"'");return(m=g.s[l])||(m=new tq(g.h,g.D),g.s[l]=m),v(t,tK(m,h,g.G),13);case 13:f=t.h,e[l]=f;case 7:c.transform&&e[l]&&(e[l]=c.transform(e[l])),t.g=3;break;case 14:d[y]=t.h;case 3:a=p.next(),t.g=2;break;case 4:return t.return(e)}})})).then(function(n){n=p(n);for(var a=0;a<e.wants.length;++a){var i=o[r[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(t.C=n)}))}}),t.i.attachMultiListener(a,i),a.delete()})(l,u.value);p=l.j,l.j={},l.setOptions(p),t.g=0})}),3):v(t,tI(e,function t(){var e,n,r,a,i,o,u=this;return w(t,function(t){switch(t.g){case 1:if(!u.o)return t.return();if(!u.u){t.g=2;break}n=(e=s(u.u)).next();case 3:if(n.done){t.g=5;break}return v(t,(0,n.value)(),4);case 4:n=e.next(),t.g=3;break;case 5:u.u=void 0;case 2:if(u.A){for(r=new u.h.GraphOptionChangeRequestList,i=(a=s(u.A)).next();!i.done;i=a.next())o=i.value,r.push_back(o);u.i.changeOptions(r),r.delete(),u.A=void 0}u.o=!1,t.g=0}})}),0)})})},u.overrideFile=function(t,e){this.i?this.i.overrideFile(t,e):this.B[t]=e},u.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},u.send=function(t,e){return tI(this,function n(){var r,a,i,o,u,p,l,c,h,m=this;return w(n,function(n){switch(n.g){case 1:if(!m.g.inputs)return n.return();return r=1e3*(null==e?performance.now():e),v(n,m.C,2);case 2:return v(n,m.initialize(),3);case 3:for(a=new m.h.PacketDataList,o=(i=s(Object.keys(t))).next();!o.done;o=i.next())if(u=o.value,p=m.g.inputs[u]){t:{var f=m,d=t[u];switch(p.type){case"video":var y=f.m[p.stream];if(y||(y=new tq(f.h,f.D),f.m[p.stream]=y),0===(f=y).l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&d instanceof HTMLVideoElement){var g=d.videoWidth;y=d.videoHeight}else"undefined"!=typeof HTMLImageElement&&d instanceof HTMLImageElement?(g=d.naturalWidth,y=d.naturalHeight):(g=d.width,y=d.height);y={glName:f.l,width:g,height:y},(g=f.g).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),f.h.bindTexture2d(f.l),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,d),f.h.bindTexture2d(0),f=y;break t;case"detections":for((y=f.m[p.stream])||(y=new tY(f.h),f.m[p.stream]=y),(f=y).data||(f.data=new f.g.DetectionListData),f.data.reset(d.length),y=0;y<d.length;++y){g=d[y];var b=f.data,x=b.setBoundingBox,N=y,T=g.T,w=new tz;tx(w,1,T.Z),tx(w,2,T.$),tx(w,3,T.height),tx(w,4,T.width),tx(w,5,T.rotation),tx(w,6,T.X);var S=T=new tn;ti(S,1,td(w,1)),ti(S,2,td(w,2)),ti(S,3,td(w,3)),ti(S,4,td(w,4)),ti(S,5,td(w,5));var _=td(w,6);if(null!=_&&null!=_){q(S.g,48);var O=S.g,A=_;_=0>A;var E=(A=Math.abs(A))>>>0;for(A=Math.floor((A-E)/4294967296),A>>>=0,_&&(A=~A>>>0,4294967295<(E=(~E>>>0)+1)&&(E=0,4294967295<++A&&(A=0))),z=E,U=A,_=z,E=U;0<E||127<_;)O.push(127&_|128),_=(_>>>7|E<<25)>>>0,E>>>=7;O.push(_)}if(tO(w,S),T=ta(T),x.call(b,N,T),g.O)for(b=0;b<g.O.length;++b)S=!!(w=g.O[b]).visibility,N=(x=f.data).addNormalizedLandmark,T=y,w=Object.assign(Object.assign({},w),{visibility:S?w.visibility:0}),tx(S=new tR,1,w.x),tx(S,2,w.y),tx(S,3,w.z),w.visibility&&tx(S,4,w.visibility),ti(O=w=new tn,1,td(S,1)),ti(O,2,td(S,2)),ti(O,3,td(S,3)),ti(O,4,td(S,4)),ti(O,5,td(S,5)),tO(S,O),w=ta(w),N.call(x,T,w);if(g.M)for(b=0;b<g.M.length;++b){if(N=(x=f.data).addClassification,T=y,w=g.M[b],tx(S=new tD,2,w.Y),w.index&&tx(S,1,w.index),w.label&&tx(S,3,w.label),w.displayName&&tx(S,4,w.displayName),O=w=new tn,null!=(E=td(S,1))&&null!=E){if(q(O.g,8),_=O.g,0<=E)q(_,E);else{for(A=0;9>A;A++)_.push(127&E|128),E>>=7;_.push(1)}}ti(O,2,td(S,2)),null!=(_=td(S,3))&&(_=F(_),q(O.g,26),q(O.g,_.length),tr(O,O.g.end()),tr(O,_)),null!=(_=td(S,4))&&(_=F(_),q(O.g,34),q(O.g,_.length),tr(O,O.g.end()),tr(O,_)),tO(S,O),w=ta(w),N.call(x,T,w)}}f=f.data;break t;default:f={}}}switch(l=f,c=p.stream,p.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},l),{stream:c,timestamp:r}));break;case"detections":(h=l).stream=c,h.timestamp=r,a.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+p.type+"'")}}return m.i.send(a),v(n,m.C,4);case 4:a.delete(),n.g=0}})})},u.onResults=function(t,e){this.listeners[e||"$"]=t},O("Solution",tZ),O("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});var t3={files:[{url:"face_mesh_solution_packed_assets_loader.js"},{simd:!0,url:"face_mesh_solution_simd_wasm_bin.js"},{simd:!1,url:"face_mesh_solution_wasm_bin.js"}],graph:{url:"face_mesh.binarypb"},listeners:[{wants:["multi_face_geometry","image_transformed","multi_face_landmarks"],outs:{image:"image_transformed",multiFaceGeometry:{type:"proto_list",stream:"multi_face_geometry",transform:function(t){return t.map(t2)}},multiFaceLandmarks:{type:"proto_list",stream:"multi_face_landmarks",transform:function(t){return t.map(function(t){return tT(tV(t),tR).map(tX)})}}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},enableFaceGeometry:{type:0,graphOptionXref:{calculatorName:"EnableFaceGeometryConstant",calculatorType:"ConstantSidePacketCalculator",fieldName:"bool_value"}},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumFaces:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorNumFaces",fieldName:"int_value"}},refineLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorRefineLandmarks",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}},cameraNear:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"near"}},cameraFar:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"far"}},cameraVerticalFovDegrees:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"vertical_fov_degrees"}}}},t4=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],t0=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],t6=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],t5=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],t7=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],t9=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],t8=[].concat(o(t4),o(t0),o(t6),o(t5),o(t7),o(t9));function et(t){t=t||{},t=Object.assign(Object.assign({},t3),t),this.g=new tZ(t)}(u=et.prototype).close=function(){return this.g.close(),Promise.resolve()},u.onResults=function(t){this.g.onResults(t)},u.initialize=function(){return tI(this,function t(){var e=this;return w(t,function(t){return v(t,e.g.initialize(),0)})})},u.reset=function(){this.g.reset()},u.send=function(t){return tI(this,function e(){var n=this;return w(e,function(e){return v(e,n.g.send(t),0)})})},u.setOptions=function(t){this.g.setOptions(t)},O("FACE_GEOMETRY",{Layout:{COLUMN_MAJOR:0,ROW_MAJOR:1,0:"COLUMN_MAJOR",1:"ROW_MAJOR"},PrimitiveType:{TRIANGLE:0,0:"TRIANGLE"},VertexType:{VERTEX_PT:0,0:"VERTEX_PT"},DEFAULT_CAMERA_PARAMS:{verticalFovDegrees:63,near:1,far:1e4}}),O("FaceMesh",et),O("FACEMESH_LIPS",t4),O("FACEMESH_LEFT_EYE",t0),O("FACEMESH_LEFT_EYEBROW",t6),O("FACEMESH_LEFT_IRIS",[[474,475],[475,476],[476,477],[477,474]]),O("FACEMESH_RIGHT_EYE",t5),O("FACEMESH_RIGHT_EYEBROW",t7),O("FACEMESH_RIGHT_IRIS",[[469,470],[470,471],[471,472],[472,469]]),O("FACEMESH_FACE_OVAL",t9),O("FACEMESH_CONTOURS",t8),O("FACEMESH_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),O("matrixDataToMatrix",function(t){for(var e=t.getCols(),n=t.getRows(),r=t.getPackedDataList(),a=[],i=0;i<n;i++)a.push(Array(e));for(i=0;i<n;i++)for(var s=0;s<e;s++){var o=1===t.getLayout()?i*e+s:s*n+i;a[i][s]=r[o]}return a}),O("VERSION","0.4.1633559619")}).call(this)},1458:function(t,e,n){"use strict";n.r(e),n.d(e,{SupportedModels:function(){return e$},createDetector:function(){return e6},util:function(){return e5}});var r={};n.r(r),n.d(r,{json:function(){return C}});var a={};n.r(a),n.d(a,{json:function(){return L}});var i={};n.r(i),n.d(i,{json:function(){return R}});var s={};n.r(s),n.d(s,{json:function(){return j}});var o={};n.r(o),n.d(o,{json:function(){return P}});var u={};n.r(u),n.d(u,{json:function(){return V}});var p={};n.r(p),n.d(p,{json:function(){return B}});var l={};n.r(l),n.d(l,{json:function(){return z}});var c={};n.r(c),n.d(c,{json:function(){return U}});var h={};n.r(h),n.d(h,{json:function(){return $}});var m={};n.r(m),n.d(m,{json:function(){return H}});var f={};n.r(f),n.d(f,{json:function(){return G}});var d={};n.r(d),n.d(d,{json:function(){return W}});var y={};n.r(y),n.d(y,{json:function(){return X}});var g={};n.r(g),n.d(g,{json:function(){return q}});var v={};n.r(v),n.d(v,{json:function(){return K}});var b={};n.r(b),n.d(b,{json:function(){return Y}});var x={};n.r(x),n.d(x,{json:function(){return Q}});var N={};n.r(N),n.d(N,{json:function(){return J}});var T={};n.r(T),n.d(T,{OP_SCOPE_SUFFIX:function(){return ty.zvA},abs:function(){return ty.WnP},acos:function(){return ty.Khb},acosh:function(){return ty.__u},add:function(){return ty.IHx},addN:function(){return ty.QBD},all:function(){return ty.$6P},any:function(){return ty.YjB},argMax:function(){return ty.NqF},argMin:function(){return ty.vHJ},asin:function(){return ty.ZRM},asinh:function(){return ty.VfV},atan:function(){return ty.z4N},atan2:function(){return ty.fvJ},atanh:function(){return ty.C80},avgPool:function(){return ty.wS1},avgPool3d:function(){return ty.uR5},basicLSTMCell:function(){return ty.zEQ},batchNorm:function(){return ty.tgs},batchNorm2d:function(){return ty.Dxk},batchNorm3d:function(){return ty.JY5},batchNorm4d:function(){return ty.p3b},batchToSpaceND:function(){return ty.E4h},bincount:function(){return ty.yE8},booleanMaskAsync:function(){return ty.anm},broadcastArgs:function(){return ty.XsQ},broadcastTo:function(){return ty.UFq},buffer:function(){return ty.f3b},cast:function(){return ty.pju},ceil:function(){return ty.mDi},clipByValue:function(){return ty.iUl},clone:function(){return ty.d9v},complex:function(){return ty.PYB},concat:function(){return ty.zoF},concat1d:function(){return ty.gME},concat2d:function(){return ty.Izb},concat3d:function(){return ty.MNy},concat4d:function(){return ty.ZaL},conv1d:function(){return ty.PAt},conv2d:function(){return ty.Tek},conv2dTranspose:function(){return ty.bc},conv3d:function(){return ty.pdZ},conv3dTranspose:function(){return ty.$QV},cos:function(){return ty.mCk},cosh:function(){return ty.f9Y},cosineWindow:function(){return ty.mew},cumprod:function(){return ty.$Gn},cumsum:function(){return ty.zbp},denseBincount:function(){return ty.ppE},depthToSpace:function(){return ty.nTT},depthwiseConv2d:function(){return ty.B10},diag:function(){return ty.Ka3},dilation2d:function(){return ty.WmZ},div:function(){return ty.hiC},divNoNan:function(){return ty.NTj},dot:function(){return ty.AKD},dropout:function(){return ty.rvX},einsum:function(){return ty.WYO},elu:function(){return ty.pyx},enclosingPowerOfTwo:function(){return ty.GRh},equal:function(){return ty.DgJ},erf:function(){return ty.qNN},euclideanNorm:function(){return ty.d2q},exp:function(){return ty.Qqt},expandDims:function(){return ty.dt4},expm1:function(){return ty.t$B},eye:function(){return ty.iyy},fft:function(){return ty.kp_},fill:function(){return ty.hlL},floor:function(){return ty.GWj},floorDiv:function(){return ty.qPi},fused:function(){return ty.imm},gather:function(){return ty.Iqj},gatherND:function(){return ty.dbB},greater:function(){return ty.pjt},greaterEqual:function(){return ty.brS},ifft:function(){return ty.Sxn},imag:function(){return ty.asL},image:function(){return ty.BHj},inTopKAsync:function(){return ty.V3u},irfft:function(){return ty.wx0},isFinite:function(){return ty.xVT},isInf:function(){return ty.UWc},isNaN:function(){return ty.i2d},leakyRelu:function(){return ty.hi7},less:function(){return ty.d9m},lessEqual:function(){return ty.zN1},linalg:function(){return ty.$r2},linspace:function(){return ty.SX3},localResponseNormalization:function(){return ty.G9k},log:function(){return ty.cM7},log1p:function(){return ty.Krr},logSigmoid:function(){return ty.e_t},logSoftmax:function(){return ty.CmS},logSumExp:function(){return ty.l_t},logicalAnd:function(){return ty.HvI},logicalNot:function(){return ty.hJK},logicalOr:function(){return ty.K5V},logicalXor:function(){return ty.egP},losses:function(){return ty.MB5},lowerBound:function(){return ty.eab},matMul:function(){return ty.OI3},max:function(){return ty.Fp7},maxPool:function(){return ty._sB},maxPool3d:function(){return ty.YQQ},maxPoolWithArgmax:function(){return ty.Ip$},maximum:function(){return ty.gWQ},mean:function(){return ty.J69},meshgrid:function(){return ty.ry_},min:function(){return ty.VV$},minimum:function(){return ty.LTh},mirrorPad:function(){return ty.VdP},mod:function(){return ty.wQq},moments:function(){return ty.Gi7},movingAverage:function(){return ty.p_},mul:function(){return ty.dC7},multiRNNCell:function(){return ty.rq4},multinomial:function(){return ty.SJ_},neg:function(){return ty.W76},norm:function(){return ty.KOy},notEqual:function(){return ty.Quu},oneHot:function(){return ty.lfX},ones:function(){return ty.iUs},onesLike:function(){return ty.JpU},op:function(){return ty.op},outerProduct:function(){return ty.N2O},pad:function(){return ty.vku},pad1d:function(){return ty.pNR},pad2d:function(){return ty.koy},pad3d:function(){return ty.t1L},pad4d:function(){return ty.lGY},pool:function(){return ty.d_R},pow:function(){return ty.sQ3},prelu:function(){return ty.AL3},print:function(){return ty.S0v},prod:function(){return ty.WVs},raggedGather:function(){return ty.$gW},raggedTensorToTensor:function(){return ty.N89},rand:function(){return ty.TN_},randomGamma:function(){return ty.wzB},randomNormal:function(){return ty.nGf},randomStandardNormal:function(){return ty.ruB},randomUniform:function(){return ty.LGj},range:function(){return ty.w6H},real:function(){return ty.kwC},reciprocal:function(){return ty.M25},relu:function(){return ty.UYe},relu6:function(){return ty.btT},reshape:function(){return ty.XLQ},reverse:function(){return ty.GYS},reverse1d:function(){return ty.SDf},reverse2d:function(){return ty.diP},reverse3d:function(){return ty.sx7},reverse4d:function(){return ty.mG2},rfft:function(){return ty.QEs},round:function(){return ty.NMM},rsqrt:function(){return ty.bp0},scalar:function(){return ty.iD$},scatterND:function(){return ty.snQ},searchSorted:function(){return ty.zcT},selu:function(){return ty.U8D},separableConv2d:function(){return ty.U_I},setdiff1dAsync:function(){return ty.ODp},sigmoid:function(){return ty.XD2},sign:function(){return ty.Xxe},signal:function(){return ty.tdS},sin:function(){return ty.O$l},sinh:function(){return ty.R_K},slice:function(){return ty.tPi},slice1d:function(){return ty.jZU},slice2d:function(){return ty.SmN},slice3d:function(){return ty.CnO},slice4d:function(){return ty.p0P},softmax:function(){return ty.XAC},softplus:function(){return ty.Wvh},spaceToBatchND:function(){return ty.fBT},sparse:function(){return ty.rVs},sparseToDense:function(){return ty.ers},spectral:function(){return ty.uN7},split:function(){return ty.Vl2},sqrt:function(){return ty._b3},square:function(){return ty.h62},squaredDifference:function(){return ty.$i},squeeze:function(){return ty.L9e},stack:function(){return ty.knu},step:function(){return ty.Nbs},stridedSlice:function(){return ty.NXj},string:function(){return ty.Z_8},sub:function(){return ty.luU},sum:function(){return ty.Smz},tan:function(){return ty.ORZ},tanh:function(){return ty.AEp},tensor:function(){return ty.XeE},tensor1d:function(){return ty.RRF},tensor2d:function(){return ty.odF},tensor3d:function(){return ty.wOQ},tensor4d:function(){return ty.yXz},tensor5d:function(){return ty.Bfx},tensor6d:function(){return ty.xZs},tile:function(){return ty.Gg6},topk:function(){return ty.hg7},transpose:function(){return ty.p4s},truncatedNormal:function(){return ty.Xu6},unique:function(){return ty.Two},unsortedSegmentSum:function(){return ty.pUJ},unstack:function(){return ty.HHK},upperBound:function(){return ty.GaM},variable:function(){return ty.VD$},where:function(){return ty.arb},whereAsync:function(){return ty.itS},zeros:function(){return ty.lls},zerosLike:function(){return ty.P84}});var w=n(8818),S=n(5239);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let _=(0,S.OBj)();_.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(ev=eN||(eN={}))[ev.DT_INVALID=0]="DT_INVALID",ev[ev.DT_FLOAT=1]="DT_FLOAT",ev[ev.DT_DOUBLE=2]="DT_DOUBLE",ev[ev.DT_INT32=3]="DT_INT32",ev[ev.DT_UINT8=4]="DT_UINT8",ev[ev.DT_INT16=5]="DT_INT16",ev[ev.DT_INT8=6]="DT_INT8",ev[ev.DT_STRING=7]="DT_STRING",ev[ev.DT_COMPLEX64=8]="DT_COMPLEX64",ev[ev.DT_INT64=9]="DT_INT64",ev[ev.DT_BOOL=10]="DT_BOOL",ev[ev.DT_QINT8=11]="DT_QINT8",ev[ev.DT_QUINT8=12]="DT_QUINT8",ev[ev.DT_QINT32=13]="DT_QINT32",ev[ev.DT_BFLOAT16=14]="DT_BFLOAT16",ev[ev.DT_QINT16=15]="DT_QINT16",ev[ev.DT_QUINT16=16]="DT_QUINT16",ev[ev.DT_UINT16=17]="DT_UINT16",ev[ev.DT_COMPLEX128=18]="DT_COMPLEX128",ev[ev.DT_HALF=19]="DT_HALF",ev[ev.DT_RESOURCE=20]="DT_RESOURCE",ev[ev.DT_VARIANT=21]="DT_VARIANT",ev[ev.DT_UINT32=22]="DT_UINT32",ev[ev.DT_UINT64=23]="DT_UINT64",ev[ev.DT_FLOAT_REF=101]="DT_FLOAT_REF",ev[ev.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ev[ev.DT_INT32_REF=103]="DT_INT32_REF",ev[ev.DT_UINT8_REF=104]="DT_UINT8_REF",ev[ev.DT_INT16_REF=105]="DT_INT16_REF",ev[ev.DT_INT8_REF=106]="DT_INT8_REF",ev[ev.DT_STRING_REF=107]="DT_STRING_REF",ev[ev.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ev[ev.DT_INT64_REF=109]="DT_INT64_REF",ev[ev.DT_BOOL_REF=110]="DT_BOOL_REF",ev[ev.DT_QINT8_REF=111]="DT_QINT8_REF",ev[ev.DT_QUINT8_REF=112]="DT_QUINT8_REF",ev[ev.DT_QINT32_REF=113]="DT_QINT32_REF",ev[ev.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",ev[ev.DT_QINT16_REF=115]="DT_QINT16_REF",ev[ev.DT_QUINT16_REF=116]="DT_QUINT16_REF",ev[ev.DT_UINT16_REF=117]="DT_UINT16_REF",ev[ev.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",ev[ev.DT_HALF_REF=119]="DT_HALF_REF",ev[ev.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",ev[ev.DT_VARIANT_REF=121]="DT_VARIANT_REF",ev[ev.DT_UINT32_REF=122]="DT_UINT32_REF",ev[ev.DT_UINT64_REF=123]="DT_UINT64_REF",(ex=(eb=eT||(eT={})).CheckpointFormatVersion||(eb.CheckpointFormatVersion={}))[ex.LEGACY=0]="LEGACY",ex[ex.V1=1]="V1",ex[ex.V2=2]="V2";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let O={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function A(t,e,n,r,a){let i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){let s=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?s+1:i.inputIndexEnd;if("tensor"===i.type)return E(e.inputNames[i.inputIndexStart],n,r,a);if("tensors"===i.type){let u=e.inputNames.slice(s,o);return u.map(t=>E(t,n,r,a))}let p=E(e.inputNames.slice(s)[0],n,r,a),l=p.dataSync();return"number"===i.type?l[0]:S.D5U.toNestedArray(p.shape,l)}let c=e.attrParams[t];return c&&c.value}function E(t,e,n,r){let[a,i]=I(t);if(null!=r){let s=r.getHashTableHandleByName(a);if(null!=s)return s}let o=n.currentContextIds.find(t=>!!e[k(a,t)]);return void 0!==o?e[k(a,o)][i]:void 0}function M(t,e){let[n,r,a]=I(t);return[k(n,e&&e.currentContextId),r,a]}function k(t,e){return e?`${t}-${e}`:t}function I(t){let e=t.split(":");if(1===e.length)return[t,0,void 0];let n=e[0],r=3===e.length?e[1]:void 0,a=Number(e[e.length-1]);return[n,a,r]}function D(t,e,n){let r=A("pad",t,e,n);if("explicit"===r){r=A("explicitPaddings",t,e,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)a[i][0]=r[2*i],a[i][1]=r[2*i+1];return a}return r}function F(t){return t.kept?t:(0,S.d9v)(t)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let C=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],R=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],j=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],z=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],$=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],W=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],X=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],K=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Y=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Z=n(1876).Buffer;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class tt{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[].concat(...[r,a,i,s,o,u,p,l,c,h,m,f,d,y,g,v,b,x,N].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){let n=t.node,r=[],a=[],i=[],s=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):(null==e.input||0===e.input.length)&&i.push(t[e.name]),t),{}),o=[],u=[],p={},l={};null!=e&&(p=this.mapSignatureEntries(e.inputs),l=this.mapSignatureEntries(e.outputs));let c=Object.keys(s);c.forEach(t=>{let e=s[t];e.inputNames.forEach((t,n)=>{let[r,,a]=M(t),i=s[r];if(null!=i.outputs){let o=i.outputs.indexOf(a);if(-1!==o){let u=`${r}:${o}`;e.inputNames[n]=u}}e.inputs.push(i),i.children.push(e)})}),0===Object.keys(l).length?c.forEach(t=>{let e=s[t];0===e.children.length&&u.push(e)}):Object.keys(l).forEach(t=>{let[e]=M(t),n=s[e];null!=n&&(n.signatureKey=l[t],u.push(n))}),Object.keys(p).length>0?Object.keys(p).forEach(t=>{let[e]=M(t),n=s[e];n&&(n.signatureKey=p[t],o.push(n))}):o=r;let h={};null!=t.library&&null!=t.library.function&&(h=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));let m={nodes:s,inputs:o,outputs:u,weights:a,placeholders:r,signature:e,functions:h};return i.length>0&&(m.initNodes=i),m}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=O[t.op]||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.slice(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{let r;let a=n.type;switch(n.type){case"string":void 0===(r=tn(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tn(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(r=th(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=th(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(r=ta(t.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(r=ta(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(r=tc(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tc(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(r=tr(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tr(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(r=tf(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tf(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(r=tl(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tl(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(r=tm(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tm(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(r=to(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=to(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(r=tu(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=tu(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":void 0===(r=ts(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=ts(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:r,type:a},e},{})),n}mapFunction(t){let e=t.nodeDef,n=[],r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));let a=[],i=[];t.signature.inputArg.forEach(t=>{let[e]=M(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ti(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});let s=Object.keys(r);s.forEach(t=>{let e=r[t];e.inputNames.forEach((t,n)=>{let[a,,i]=M(t),s=r[a];if(null!=s.outputs){let o=s.outputs.indexOf(i);if(-1!==o){let u=`${a}:${o}`;e.inputNames[n]=u}}e.inputs.push(s),s.children.push(e)})});let o=t.ret;t.signature.outputArg.forEach(t=>{let[e,n]=M(o[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,i.push(a))});let u=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:i,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function te(t,e){let n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){let e=(0,S.OBj)().global;if(void 0!==e.atob)return e.atob(t);if(void 0!==Z)return new Z(t,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function tn(t,e,n,r=!1){let a=t[e];return null!=a?te(a.s,r):n}function tr(t,e,n){let r=t[e];return r?r.b:n}function ta(t,e,n){let r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ti(t){switch("string"==typeof t&&(t=eN[t]),t){case eN.DT_FLOAT:case eN.DT_HALF:return"float32";case eN.DT_INT32:case eN.DT_INT64:case eN.DT_INT8:case eN.DT_UINT8:return"int32";case eN.DT_BOOL:return"bool";case eN.DT_DOUBLE:return"float32";case eN.DT_STRING:return"string";default:return null}}function ts(t,e,n){let r=t[e];return r&&r.func?r.func.name:n}function to(t,e,n){let r=t[e];return r&&r.type?ti(r.type):n}function tu(t,e,n){let r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>ti(t)):n}function tp(t){return t.unknownRank?void 0:null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function tl(t,e,n){let r=t[e];return r&&r.shape?tp(r.shape):n}function tc(t,e,n){let r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function th(t,e,n,r=!1){let a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>te(t,r)):n}function tm(t,e,n){let r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>tp(t)):n}function tf(t,e,n){let r=t[e];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class td{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return E(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(null!=n.tensor)return E(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ta(this.node.rawAttrs,t,e);if(null!=n.s)return tn(this.node.rawAttrs,t,e);if(null!=n.b)return tr(this.node.rawAttrs,t,e);if(null!=n.shape)return tl(this.node.rawAttrs,t,e);if(null!=n.type)return to(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return tc(this.node.rawAttrs,t,e);if(null!=n.list.s)return th(this.node.rawAttrs,t,e);if(null!=n.list.shape)return tm(this.node.rawAttrs,t,e);if(null!=n.list.b)return tf(this.node.rawAttrs,t,e);if(null!=n.list.type)return tu(this.node.rawAttrs,t,e)}return e}}var ty=n(1822);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let tg=(t,e,n,r=T)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(A("a",t,e,n),A("b",t,e,n))];case"AddN":return[r.addN(A("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(A("a",t,e,n),A("b",t,e,n))];case"Mul":return[r.mul(A("a",t,e,n),A("b",t,e,n))];case"RealDiv":case"Div":return[r.div(A("a",t,e,n),A("b",t,e,n))];case"DivNoNan":return[r.divNoNan(A("a",t,e,n),A("b",t,e,n))];case"FloorDiv":return[r.floorDiv(A("a",t,e,n),A("b",t,e,n))];case"Sub":return[r.sub(A("a",t,e,n),A("b",t,e,n))];case"Minimum":return[r.minimum(A("a",t,e,n),A("b",t,e,n))];case"Maximum":return[r.maximum(A("a",t,e,n),A("b",t,e,n))];case"Pow":return[r.pow(A("a",t,e,n),A("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(A("a",t,e,n),A("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}},tv=(t,e,n,r=T)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(A("x",t,e,n))];case"Acos":return[r.acos(A("x",t,e,n))];case"Acosh":return[r.acosh(A("x",t,e,n))];case"Asin":return[r.asin(A("x",t,e,n))];case"Asinh":return[r.asinh(A("x",t,e,n))];case"Atan":return[r.atan(A("x",t,e,n))];case"Atan2":return[r.atan2(A("x",t,e,n),A("y",t,e,n))];case"Atanh":return[r.atanh(A("x",t,e,n))];case"Ceil":return[r.ceil(A("x",t,e,n))];case"Complex":return[r.complex(A("real",t,e,n),A("imag",t,e,n))];case"Cos":return[r.cos(A("x",t,e,n))];case"Cosh":return[r.cosh(A("x",t,e,n))];case"Elu":return[r.elu(A("x",t,e,n))];case"Erf":return[r.erf(A("x",t,e,n))];case"Exp":return[r.exp(A("x",t,e,n))];case"Expm1":return[r.expm1(A("x",t,e,n))];case"Floor":return[r.floor(A("x",t,e,n))];case"Log":return[r.log(A("x",t,e,n))];case"Log1p":return[r.log1p(A("x",t,e,n))];case"Imag":return[r.imag(A("x",t,e,n))];case"Neg":return[r.neg(A("x",t,e,n))];case"Reciprocal":return[r.reciprocal(A("x",t,e,n))];case"Real":return[r.real(A("x",t,e,n))];case"Relu":return[r.relu(A("x",t,e,n))];case"Round":return[r.round(A("x",t,e,n))];case"Selu":return[r.selu(A("x",t,e,n))];case"Sigmoid":return[r.sigmoid(A("x",t,e,n))];case"Sin":return[r.sin(A("x",t,e,n))];case"Sign":return[r.sign(A("x",t,e,n))];case"Sinh":return[r.sinh(A("x",t,e,n))];case"Softplus":return[r.softplus(A("x",t,e,n))];case"Sqrt":return[r.sqrt(A("x",t,e,n))];case"Square":return[r.square(A("x",t,e,n))];case"Tanh":return[r.tanh(A("x",t,e,n))];case"Tan":return[r.tan(A("x",t,e,n))];case"ClipByValue":return[r.clipByValue(A("x",t,e,n),A("clipValueMin",t,e,n),A("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(A("x",t,e,n))];case"Rsqrt":return[r.rsqrt(E(t.inputNames[0],e,n))];case"Prod":return[r.prod(A("x",t,e,n),A("axes",t,e,n))];case"LeakyRelu":return[r.leakyRelu(A("x",t,e,n),A("alpha",t,e,n))];case"Prelu":return[r.prelu(A("x",t,e,n),A("alpha",t,e,n))];case"IsNan":return[r.isNaN(E(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function tb(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){S.D5U.assert(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){let a=t[r],i=e[r];S.D5U.assert(a<0||i<0||a===i,()=>n+` Shapes ${t} and ${e} must match`)}}}function tx(t){return!("number"==typeof t||t.some(t=>t<0))}function tN(t,e,n){let r=tT(t,n),a=!tx(r);if(a&&0===e.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&e.forEach(t=>{r=tT(t.shape,r)}),!tx(r))throw Error(`Non-fully-defined elementShape: ${r}`);return r}function tT(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw Error(`Incompatible ranks during merge: ${t} vs. ${e}`);let n=[];for(let r=0;r<t.length;++r){let a=t[r],i=e[r];if(a>=0&&i>=0&&a!==i)throw Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=a>=0?a:i}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class tw{constructor(t,e,n,r,a,i,s){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.iD$)(0),(0,S.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=e.shape),tb(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,(0,S.CnY)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(0===t.length)return(0,S.XeE)([],[0].concat(this.elementShape));let r=this.readMany(t);return tb(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),(0,S.knu)(r,0)}concat(t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return(0,S.XeE)([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let r=this.readMany(e);return tb(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),(0,S.zoF)(r,0)}scatter(t,e){if(e.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,(0,S.HHK)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,r=t.map(t=>n+=t);if(n!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:e.size/n,i=[];(0,S.lub)(()=>{e=(0,S.XLQ)(e,[1,n,a]);for(let s=0;s<t.length;++s){let o=0===s?0:r[s-1],u=[0,o,0],p=[1,t[s],a];i[s]=(0,S.XLQ)((0,S.tPi)(e,u,p),this.elementShape)}return i});let s=[];for(let o=0;o<t.length;o++)s[o]=o;this.writeMany(s,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class tS{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);tb(e,t.shape,"TensorList shape mismatch: "),(0,S.CnY)(t)}),this.idTensor=(0,S.iD$)(0),this.maxNumElements=r,(0,S.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new tS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);tb(t,this.elementShape,"TensorList shape mismatch: ");let r=tN(this.elementShape,this.tensors,t);return(0,S.lub)(()=>{let t=this.tensors.map(t=>(0,S.XLQ)(t,r));return(0,S.knu)(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let n=tN(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,tb(r.shape,t,"TensorList shape mismatch: "),(0,S.XLQ)(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(tb(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");(0,S.CnY)(t),this.tensors.push(t)}resize(t){if(t<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new tS([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw Error(`element at index ${t} is null.`);tb(this.tensors[t].shape,e,"TensorList shape mismatch: ");let r=tN(this.elementShape,this.tensors,e);return(0,S.XLQ)(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);tb(this.elementShape,e.shape,"TensorList shape mismatch: "),(0,S.CnY)(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);tb(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let r=tN(this.elementShape,this.tensors,n);return 0===t.length?(0,S.XeE)([],[0].concat(r)):(0,S.lub)(()=>{let e=t.map(t=>(0,S.XLQ)(this.tensors[t],r));return(0,S.knu)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);tb(this.elementShape,e,"TensorList shape mismatch: ");let n=tN(this.elementShape,this.tensors,e);return 0===this.size()?(0,S.XeE)([],[0].concat(n)):(0,S.lub)(()=>{let t=this.tensors.map(t=>(0,S.XLQ)(t,n));return(0,S.zoF)(t,0)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let t_=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{let r=A("thenBranch",t,e,n),a=A("elseBranch",t,e,n),i=A("cond",t,e,n),s=A("args",t,e,n),o=await i.data();if(o[0])return n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap);return n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let u=A("body",t,e,n),p=A("cond",t,e,n),l=A("args",t,e,n),c=await n.functionMap[p].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap),h=l.map(t=>t.id),m=await c[0].data();c.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||t.dispose()});let f=l;for(;m[0];){let d=f;f=await n.functionMap[u].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);let y=f.map(t=>t.id);d.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||-1!==y.indexOf(t.id)||t.dispose()});let g=await n.functionMap[p].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);m=await g[0].data(),g.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||-1!==y.indexOf(t.id)||t.dispose()})}return f}case"LoopCond":{let v=A("pred",t,e,n);return[F(v)]}case"Switch":{let b=A("pred",t,e,n),x=A("data",t,e,n);return x.kept||(x=F(x)),(await b.data())[0]?[void 0,x]:[x,void 0]}case"Merge":{let N=t.inputNames.find(t=>void 0!==E(t,e,n));if(N){let T=E(N,e,n);return[F(T)]}return}case"Enter":{let w=A("frameName",t,e,n),_=A("tensor",t,e,n);return n.enterFrame(w),[F(_)]}case"Exit":{let O=A("tensor",t,e,n);return n.exitFrame(),[F(O)]}case"NextIteration":{let M=A("tensor",t,e,n);return n.nextIteration(),[F(M)]}case"TensorArrayV3":{let k=A("size",t,e,n),I=A("dtype",t,e,n),D=A("elementShape",t,e,n),C=A("dynamicSize",t,e,n),L=A("clearAfterRead",t,e,n),R=A("identicalElementShapes",t,e,n),j=A("name",t,e,n),P=new tw(j,I,k,D,R,C,L);return n.addTensorArray(P),[P.idTensor,(0,S.iD$)(1)]}case"TensorArrayWriteV3":{let V=A("tensorArrayId",t,e,n),B=A("index",t,e,n),z=A("tensor",t,e,n),U=n.getTensorArray(V.id);return U.write(B,z),[U.idTensor]}case"TensorArrayReadV3":{let $=A("tensorArrayId",t,e,n),H=A("index",t,e,n),G=n.getTensorArray($.id);return[G.read(H)]}case"TensorArrayGatherV3":{let W=A("tensorArrayId",t,e,n),X=A("indices",t,e,n),q=A("dtype",t,e,n),K=n.getTensorArray(W.id);return[K.gather(X,q)]}case"TensorArrayScatterV3":{let Y=A("tensorArrayId",t,e,n),Q=A("indices",t,e,n),J=A("tensor",t,e,n),Z=n.getTensorArray(Y.id);return Z.scatter(Q,J),[Z.idTensor]}case"TensorArrayConcatV3":{let tt=A("tensorArrayId",t,e,n),te=n.getTensorArray(tt.id),tn=A("dtype",t,e,n);return[te.concat(tn)]}case"TensorArraySplitV3":{let tr=A("tensorArrayId",t,e,n),ta=A("tensor",t,e,n),ti=A("lengths",t,e,n),ts=n.getTensorArray(tr.id);return ts.split(ti,ta),[ts.idTensor]}case"TensorArraySizeV3":{let to=A("tensorArrayId",t,e,n),tu=n.getTensorArray(to.id);return[(0,S.iD$)(tu.size(),"int32")]}case"TensorArrayCloseV3":{let tp=A("tensorArrayId",t,e,n),tl=n.getTensorArray(tp.id);return tl.clearAndClose(),[tl.idTensor]}case"TensorListSetItem":{let tc=A("tensorListId",t,e,n),th=A("index",t,e,n),tm=A("tensor",t,e,n),tf=n.getTensorList(tc.id);return tf.setItem(th,tm),[tf.idTensor]}case"TensorListGetItem":{let td=A("tensorListId",t,e,n),ty=A("index",t,e,n),tg=A("elementShape",t,e,n),tv=A("elementDType",t,e,n),tx=n.getTensorList(td.id);return[tx.getItem(ty,tg,tv)]}case"TensorListScatterV2":case"TensorListScatter":{let tN=A("indices",t,e,n),t_=A("tensor",t,e,n),tO=A("elementShape",t,e,n),tA=A("numElements",t,e,n),tE=function(t,e,n,r){if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let a=Math.max(...e);if(null!=r&&-1!==r&&a>=r)throw Error(`Max index must be < array size (${a}  vs. ${r})`);let i=new tS([],n,t.dtype,r),s=(0,S.HHK)(t,0);return e.forEach((t,e)=>{i.setItem(t,s[e])}),i}(t_,tN,tO,tA);return n.addTensorList(tE),[tE.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let tM;let tk=A("elementShape",t,e,n),tI=A("elementDType",t,e,n);tM="TensorListReserve"===t.op?"numElements":"maxNumElements";let tD=A(tM,t,e,n),tF="TensorListReserve"===t.op?-1:tD,tC=new tS([],tk,tI,tF);return n.addTensorList(tC),[tC.idTensor]}case"TensorListGather":{let tL=A("tensorListId",t,e,n),tR=A("indices",t,e,n),tj=A("elementShape",t,e,n),tP=A("elementDType",t,e,n),tV=n.getTensorList(tL.id);return[tV.gather(tR,tP,tj)]}case"TensorListStack":{let tB=A("tensorListId",t,e,n),tz=A("elementShape",t,e,n),tU=A("elementDType",t,e,n),t$=A("numElements",t,e,n),tH=n.getTensorList(tB.id);return[tH.stack(tz,tU,t$)]}case"TensorListFromTensor":{let tG=A("tensor",t,e,n),tW=A("elementShape",t,e,n),tX=A("elementDType",t,e,n),tq=function(t,e,n){let r=t.dtype;if(t.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);let a=t.shape.slice(1);tb(a,e,"TensorList shape mismatch: ");let i=(0,S.HHK)(t);return new tS(i,e,r)}(tG,tW,tX);return n.addTensorList(tq),[tq.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let tK=A("tensorListId",t,e,n),tY=n.getTensorList(tK.id),tQ=A("dtype",t,e,n),tJ=A("elementShape",t,e,n);return[tY.concat(tQ,tJ)]}case"TensorListPushBack":{let tZ=A("tensorListId",t,e,n),t1=A("tensor",t,e,n),t2=n.getTensorList(tZ.id);return t2.pushBack(t1),[t2.idTensor]}case"TensorListPopBack":{let t3=A("tensorListId",t,e,n),t4=A("elementShape",t,e,n),t0=A("elementDType",t,e,n),t6=n.getTensorList(t3.id);return[t6.popBack(t4,t0)]}case"TensorListSplit":{let t5=A("tensor",t,e,n),t7=A("elementShape",t,e,n),t9=A("lengths",t,e,n),t8=function(t,e,n){let r=0,a=e.map(t=>r+=t);if(r!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);let i=t.shape.slice(1),s=tT(i,n),o=0===r?0:t.size/r,u=(0,S.lub)(()=>{let n=[];t=(0,S.XLQ)(t,[1,r,o]);for(let i=0;i<e.length;++i){let u=0===i?0:a[i-1],p=[0,u,0],l=[1,e[i],o];n[i]=(0,S.XLQ)((0,S.tPi)(t,p,l),s)}return t.dispose(),n}),p=new tS([],n,t.dtype,e.length);for(let l=0;l<u.length;l++)p.setItem(l,u[l]);return p}(t5,t9,t7);return n.addTensorList(t8),[t8.idTensor]}case"TensorListLength":{let et=A("tensorListId",t,e,n),ee=n.getTensorList(et.id);return[(0,S.iD$)(ee.size(),"int32")]}case"TensorListResize":{let en=A("tensorListId",t,e,n),er=A("size",t,e,n),ea=n.getTensorList(en.id),ei=ea.resize(er);return n.addTensorList(ei),[ei.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function tO(t,e,n){let[r,a]=A("fusedOps",t,e,n),i="biasadd"===r,s="prelu"===a,o=A("numArgs",t,e,n);if(i){if(s&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&i&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===r)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=A("strides",t,e,n),p=D(t,e,n),l=A("dataFormat",t,e,n).toUpperCase(),c=A("dilations",t,e,n),[h,m]=A("args",t,e,n);i||(m=h,h=void 0);let f=A("leakyreluAlpha",t,e,n);return{stride:u,pad:p,dataFormat:l,dilations:c,biasArg:h,preluArg:m,activationFunc:a,leakyreluAlpha:f}}let tA=(t,e,n,r=T)=>{switch(t.op){case"Conv1D":{let a=A("stride",t,e,n),i=A("pad",t,e,n),s=A("dataFormat",t,e,n).toUpperCase(),o=A("dilation",t,e,n);return[r.conv1d(A("x",t,e,n),A("filter",t,e,n),a,i,s,o)]}case"Conv2D":{let u=A("strides",t,e,n),p=D(t,e,n),l=A("dataFormat",t,e,n).toUpperCase(),c=A("dilations",t,e,n);return[r.conv2d(A("x",t,e,n),A("filter",t,e,n),[u[1],u[2]],p,l,[c[1],c[2]])]}case"_FusedConv2D":{let{stride:h,pad:m,dataFormat:f,dilations:d,biasArg:y,preluArg:g,activationFunc:v,leakyreluAlpha:b}=tO(t,e,n);return[r.fused.conv2d({x:A("x",t,e,n),filter:A("filter",t,e,n),strides:[h[1],h[2]],pad:m,dataFormat:f,dilations:[d[1],d[2]],bias:y,activation:v,preluActivationWeights:g,leakyreluAlpha:b})]}case"FusedDepthwiseConv2dNative":{let{stride:x,pad:N,dataFormat:w,dilations:S,biasArg:_,preluArg:O,activationFunc:E,leakyreluAlpha:M}=tO(t,e,n);return[r.fused.depthwiseConv2d({x:A("x",t,e,n),filter:A("filter",t,e,n),strides:[x[1],x[2]],pad:N,dataFormat:w,dilations:[S[1],S[2]],bias:_,activation:E,preluActivationWeights:O,leakyreluAlpha:M})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let k=A("outputShape",t,e,n),I=A("strides",t,e,n),F=D(t,e,n);return[r.conv2dTranspose(A("x",t,e,n),A("filter",t,e,n),k,[I[1],I[2]],F)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let C=A("strides",t,e,n),L=D(t,e,n),R=A("dilations",t,e,n),j=A("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(A("input",t,e,n),A("filter",t,e,n),[C[1],C[2]],L,j,[R[1],R[2]])]}case"Conv3D":{let P=A("strides",t,e,n),V=A("pad",t,e,n),B=A("dataFormat",t,e,n).toUpperCase(),z=A("dilations",t,e,n);return[r.conv3d(A("x",t,e,n),A("filter",t,e,n),[P[1],P[2],P[3]],V,B,[z[1],z[2],z[3]])]}case"AvgPool":{let U=A("strides",t,e,n),$=A("pad",t,e,n),H=A("kernelSize",t,e,n);return[r.avgPool(A("x",t,e,n),[H[1],H[2]],[U[1],U[2]],$)]}case"MaxPool":{let G=A("strides",t,e,n),W=A("pad",t,e,n),X=A("kernelSize",t,e,n);return[r.maxPool(A("x",t,e,n),[X[1],X[2]],[G[1],G[2]],W)]}case"MaxPoolWithArgmax":{let q=A("strides",t,e,n),K=A("pad",t,e,n),Y=A("kernelSize",t,e,n),Q=A("includeBatchInIndex",t,e,n),{result:J,indexes:Z}=r.maxPoolWithArgmax(A("x",t,e,n),[Y[1],Y[2]],[q[1],q[2]],K,Q);return[J,Z]}case"AvgPool3D":{let tt=A("strides",t,e,n),te=A("pad",t,e,n),tn=A("kernelSize",t,e,n);return[r.avgPool3d(A("x",t,e,n),[tn[1],tn[2],tn[3]],[tt[1],tt[2],tt[3]],te)]}case"MaxPool3D":{let tr=A("strides",t,e,n),ta=A("pad",t,e,n),ti=A("kernelSize",t,e,n);return[r.maxPool3d(A("x",t,e,n),[ti[1],ti[2],ti[3]],[tr[1],tr[2],tr[3]],ta)]}case"Dilation2D":{let ts=A("strides",t,e,n),to=A("pad",t,e,n),tu=A("dilations",t,e,n),tp=ts[1],tl=ts[2],tc=tu[1],th=tu[2];return[r.dilation2d(A("x",t,e,n),A("filter",t,e,n),[tp,tl],to,[tc,th],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tE=(t,e,n,r=T)=>{switch(t.op){case"Fill":{let a=A("shape",t,e,n),i=A("dtype",t,e,n),s=A("value",t,e,n);return[r.fill(a,s,i)]}case"LinSpace":{let o=A("start",t,e,n),u=A("stop",t,e,n),p=A("num",t,e,n);return[r.linspace(o,u,p)]}case"Multinomial":{let l=A("logits",t,e,n),c=A("numSamples",t,e,n),h=A("seed",t,e,n);return[r.multinomial(l,c,h)]}case"OneHot":{let m=A("indices",t,e,n),f=A("depth",t,e,n),d=A("onValue",t,e,n),y=A("offValue",t,e,n),g=A("dtype",t,e,n);return[r.oneHot(m,f,d,y,g)]}case"Ones":return[r.ones(A("shape",t,e,n),A("dtype",t,e,n))];case"OnesLike":return[r.onesLike(A("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(A("shape",t,e,n),A("dtype",t,e,n),A("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(A("shape",t,e,n),A("minval",t,e,n),A("maxval",t,e,n),A("dtype",t,e,n))];case"Range":{let v=A("start",t,e,n),b=A("stop",t,e,n),x=A("step",t,e,n);return[r.range(v,b,x,A("dtype",t,e,n))]}case"TruncatedNormal":{let N=A("shape",t,e,n),w=A("mean",t,e,n),S=A("stdDev",t,e,n),_=A("seed",t,e,n);return[r.truncatedNormal(N,w,S,A("dtype",t,e,n),_)]}case"Zeros":return[r.zeros(A("shape",t,e,n),A("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(A("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function tM(t,e,n){let r=A("boxes",t,e,n),a=A("scores",t,e,n),i=A("maxOutputSize",t,e,n),s=A("iouThreshold",t,e,n),o=A("scoreThreshold",t,e,n),u=A("softNmsSigma",t,e,n);return{boxes:r,scores:a,maxOutputSize:i,iouThreshold:s,scoreThreshold:o,softNmsSigma:u}}let tk=async(t,e,n,r,a=T)=>{switch(t.op){case"NonMaxSuppressionV5":{let{boxes:i,scores:s,maxOutputSize:o,iouThreshold:u,scoreThreshold:p,softNmsSigma:l}=tM(t,e,n),c=await a.image.nonMaxSuppressionWithScoreAsync(i,s,o,u,p,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:h,scores:m,maxOutputSize:f,iouThreshold:d,scoreThreshold:y}=tM(t,e,n),g=A("padToMaxOutputSize",t,e,n),v=await a.image.nonMaxSuppressionPaddedAsync(h,m,f,d,y,g);return[v.selectedIndices,v.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:b,scores:x,maxOutputSize:N,iouThreshold:w,scoreThreshold:S}=tM(t,e,n);return[await a.image.nonMaxSuppressionAsync(b,x,N,w,S)]}case"Where":{let _=a.cast(A("condition",t,e,n),"bool"),O=[await a.whereAsync(_)];return _.dispose(),O}case"ListDiff":return a.setdiff1dAsync(A("x",t,e,n),A("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}},tI=(t,e,n,r=T)=>{switch(t.op){case"LowerBound":{let a=A("sortedSequence",t,e,n),i=A("values",t,e,n);return[r.lowerBound(a,i)]}case"TopKV2":{let s=A("x",t,e,n),o=A("k",t,e,n),u=A("sorted",t,e,n),p=r.topk(s,o,u);return[p.values,p.indices]}case"UpperBound":{let l=A("sortedSequence",t,e,n),c=A("values",t,e,n);return[r.upperBound(l,c)]}case"Unique":{let h=A("x",t,e,n),m=r.unique(h);return[m.values,m.indices]}case"UniqueV2":{let f=A("x",t,e,n),d=A("axis",t,e,n),y=r.unique(f,d);return[y.values,y.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tD=(t,e,n,r=T)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":let a=A("default",t,e,n);return[E(t.name,e,n)||a];case"Placeholder":return[E(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let i=A("x",t,e,n);return[F(i)]}case"IdentityN":return A("x",t,e,n).map(t=>F(t));case"Snapshot":let s=A("x",t,e,n);return[F(s)];case"Shape":return[r.tensor1d(A("x",t,e,n).shape,"int32")];case"ShapeN":return A("x",t,e,n).map(t=>r.tensor1d(t.shape));case"Size":return[r.scalar(A("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(A("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let o=A("x",t,e,n),u=A("data",t,e,n),p=A("message",t,e,n),l=A("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(p);for(let c=0;c<u.length;c++)console.log(Array.prototype.slice.call(u[c].dataSync()).slice(0,l));return[o];default:throw TypeError(`Node type ${t.op} is not implemented`)}};var tF=n(9494);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class tC{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=(0,S.iD$)(0),this.tensorMap=new Map,(0,S.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tF.i(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),(0,S.lub)(()=>{let t=(0,S.HHK)(e),r=n.length,a=t.length;S.D5U.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){let s=n[i],o=t[i];(0,S.CnY)(o),this.tensorMap.set(s,o)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return(0,S.lub)(()=>{let t=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,e);t.push(i)}return(0,S.knu)(t)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ let tL=async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{let a=A("keyDType",t,e,n),i=A("valueDType",t,e,n),s=new tC(a,i);return r.addHashTable(t.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=A("tableHandle",t,e,n,r),u=A("keys",t,e,n),p=A("values",t,e,n),l=r.getHashTableById(o.id);return[await l.import(u,p)]}case"LookupTableFind":case"LookupTableFindV2":{let c=A("tableHandle",t,e,n,r),h=A("keys",t,e,n),m=A("defaultValue",t,e,n),f=r.getHashTableById(c.id);return[await f.find(h,m)]}case"LookupTableSize":case"LookupTableSizeV2":{let d=A("tableHandle",t,e,n,r),y=r.getHashTableById(d.id);return[y.tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tR=(t,e,n,r=T)=>{switch(t.op){case"ResizeBilinear":{let a=A("images",t,e,n),i=A("size",t,e,n),s=A("alignCorners",t,e,n),o=A("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(a,[i[0],i[1]],s,o)]}case"ResizeNearestNeighbor":{let u=A("images",t,e,n),p=A("size",t,e,n),l=A("alignCorners",t,e,n),c=A("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(u,[p[0],p[1]],l,c)]}case"CropAndResize":{let h=A("image",t,e,n),m=A("boxes",t,e,n),f=A("boxInd",t,e,n),d=A("cropSize",t,e,n),y=A("method",t,e,n),g=A("extrapolationValue",t,e,n);return[r.image.cropAndResize(h,m,f,d,y,g)]}case"ImageProjectiveTransformV3":{let v=A("images",t,e,n),b=A("transforms",t,e,n),x=A("outputShape",t,e,n),N=A("fillValue",t,e,n),w=A("interpolation",t,e,n),S=A("fillMode",t,e,n);return[r.image.transform(v,b,w.toLowerCase(),S.toLowerCase(),N,x)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tj=(t,e,n,r=T)=>{switch(t.op){case"Equal":return[r.equal(A("a",t,e,n),A("b",t,e,n))];case"NotEqual":return[r.notEqual(A("a",t,e,n),A("b",t,e,n))];case"Greater":return[r.greater(A("a",t,e,n),A("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(A("a",t,e,n),A("b",t,e,n))];case"Less":return[r.less(A("a",t,e,n),A("b",t,e,n))];case"LessEqual":return[r.lessEqual(A("a",t,e,n),A("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(A("a",t,e,n),A("b",t,e,n))];case"LogicalNot":return[r.logicalNot(A("a",t,e,n))];case"LogicalOr":return[r.logicalOr(A("a",t,e,n),A("b",t,e,n))];case"Select":case"SelectV2":return[r.where(A("condition",t,e,n),A("a",t,e,n),A("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}},tP=(t,e,n,r=T)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(A("a",t,e,n),A("b",t,e,n),A("transposeA",t,e,n),A("transposeB",t,e,n))];case"Einsum":return[r.einsum(A("equation",t,e,n),...A("tensors",t,e,n))];case"Transpose":return[r.transpose(A("x",t,e,n),A("perm",t,e,n))];case"_FusedMatMul":let[a,i]=A("fusedOps",t,e,n),s="prelu"===i,o=A("numArgs",t,e,n),u=A("leakyreluAlpha",t,e,n);if("biasadd"===a){if(s&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,l]=A("args",t,e,n);return[r.fused.matMul({a:A("a",t,e,n),b:A("b",t,e,n),transposeA:A("transposeA",t,e,n),transposeB:A("transposeB",t,e,n),bias:p,activation:i,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${t.op} is not implemented`)}},tV=(t,e,n,r=T)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(A("x",t,e,n),A("axis",t,e,n),A("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(A("x",t,e,n),A("mean",t,e,n),A("variance",t,e,n),A("offset",t,e,n),A("scale",t,e,n),A("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(A("x",t,e,n),A("radius",t,e,n),A("bias",t,e,n),A("alpha",t,e,n),A("beta",t,e,n))];case"Softmax":return[r.softmax(A("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(A("x",t,e,n))];case"SparseToDense":return[r.sparseToDense(A("sparseIndices",t,e,n),A("outputShape",t,e,n),A("sparseValues",t,e,n),A("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}},tB=(t,e,n,r=T)=>{switch(t.op){case"Max":{let a=A("axis",t,e,n),i=A("keepDims",t,e,n);return[r.max(A("x",t,e,n),a,i)]}case"Mean":{let s=A("axis",t,e,n),o=A("keepDims",t,e,n);return[r.mean(A("x",t,e,n),s,o)]}case"Min":{let u=A("axis",t,e,n),p=A("keepDims",t,e,n);return[r.min(A("x",t,e,n),u,p)]}case"Sum":{let l=A("axis",t,e,n),c=A("keepDims",t,e,n);return[r.sum(A("x",t,e,n),l,c)]}case"All":{let h=A("axis",t,e,n),m=A("keepDims",t,e,n);return[r.all(A("x",t,e,n),h,m)]}case"Any":{let f=A("axis",t,e,n),d=A("keepDims",t,e,n);return[r.any(A("x",t,e,n),f,d)]}case"ArgMax":{let y=A("axis",t,e,n);return[r.argMax(A("x",t,e,n),y)]}case"ArgMin":{let g=A("axis",t,e,n);return[r.argMin(A("x",t,e,n),g)]}case"Prod":{let v=A("axis",t,e,n),b=A("keepDims",t,e,n);return[r.prod(A("x",t,e,n),v,b)]}case"Cumprod":{let x=A("axis",t,e,n),N=A("exclusive",t,e,n),w=A("reverse",t,e,n);return[r.cumprod(A("x",t,e,n),x,N,w)]}case"Cumsum":{let S=A("axis",t,e,n),_=A("exclusive",t,e,n),O=A("reverse",t,e,n);return[r.cumsum(A("x",t,e,n),S,_,O)]}case"Bincount":let E=A("x",t,e,n),M=A("weights",t,e,n),k=A("size",t,e,n);return[r.bincount(E,M,k)];case"DenseBincount":{let I=A("x",t,e,n),D=A("weights",t,e,n),F=A("size",t,e,n),C=A("binaryOutput",t,e,n);return[r.denseBincount(I,D,F,C)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tz=(t,e,n,r=T)=>{switch(t.op){case"ConcatV2":case"Concat":{let a=A("n",t,e,n),i=A("axis",t,e,n),s=A("tensors",t,e,n);return s=s.slice(0,a),[r.concat(s,i)]}case"Gather":{let o=A("x",t,e,n),u=A("indices",t,e,n);return[r.gather(o,r.cast(u,"int32"),0)]}case"GatherV2":{let p=A("axis",t,e,n),l=A("batchDims",t,e,n),c=A("x",t,e,n),h=A("indices",t,e,n);return[r.gather(c,r.cast(h,"int32"),p,l)]}case"Reverse":{let m=A("dims",t,e,n),f=[];for(let d=0;d<m.length;d++)m[d]&&f.push(d);let y=A("x",t,e,n);return[r.reverse(y,f)]}case"ReverseV2":{let g=A("axis",t,e,n),v=A("x",t,e,n);return[r.reverse(v,g)]}case"Slice":{let b=A("begin",t,e,n),x=A("size",t,e,n);return[r.slice(A("x",t,e,n),b,x)]}case"StridedSlice":{let N=A("begin",t,e,n),w=A("end",t,e,n),_=A("strides",t,e,n),O=A("beginMask",t,e,n),E=A("endMask",t,e,n),M=A("ellipsisMask",t,e,n),k=A("newAxisMask",t,e,n),I=A("shrinkAxisMask",t,e,n),D=A("x",t,e,n);return[r.stridedSlice(D,N,w,_,O,E,M,k,I)]}case"Pack":return(0,S.lub)(()=>{let a=A("axis",t,e,n),i=A("tensors",t,e,n),s=i[0].shape,o=r.squeeze(i[0]).shape,u=i.map(t=>{let e=S.D5U.arraysEqual(t.shape,s);if(!e&&!S.D5U.arraysEqual(r.squeeze(t).shape,o))throw Error("the input tensors shape does not match");return e?t:r.reshape(t,s)});return[r.stack(u,a)]});case"Unpack":{let F=A("axis",t,e,n),C=A("tensor",t,e,n);return r.unstack(C,F)}case"Tile":{let L=A("reps",t,e,n);return[r.tile(A("x",t,e,n),L)]}case"Split":case"SplitV":{let R=A("axis",t,e,n),j=A("numOrSizeSplits",t,e,n),P=A("x",t,e,n);return r.split(P,j,R)}case"ScatterNd":{let V=A("indices",t,e,n),B=A("values",t,e,n),z=A("shape",t,e,n);return[r.scatterND(V,B,z)]}case"GatherNd":{let U=A("x",t,e,n),$=A("indices",t,e,n);return[r.gatherND(U,$)]}case"SparseToDense":{let H=A("sparseIndices",t,e,n),G=A("outputShape",t,e,n),W=A("sparseValues",t,e,n),X=A("defaultValue",t,e,n);return[r.sparseToDense(H,W,G,W.dtype===X.dtype?X:r.cast(X,W.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tU=(t,e,n,r=T)=>{switch(t.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:i,emptyRowIndicator:s,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(A("indices",t,e,n),A("values",t,e,n),A("denseShape",t,e,n),A("defaultValue",t,e,n));return[a,i,s,o]}case"SparseReshape":{let{outputIndices:u,outputShape:p}=r.sparse.sparseReshape(A("inputIndices",t,e,n),A("inputShape",t,e,n),A("newShape",t,e,n));return[u,p]}case"SparseSegmentMean":{let l=r.sparse.sparseSegmentMean(A("data",t,e,n),A("indices",t,e,n),A("segmentIds",t,e,n));return[l]}case"SparseSegmentSum":{let c=r.sparse.sparseSegmentSum(A("data",t,e,n),A("indices",t,e,n),A("segmentIds",t,e,n));return[c]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},t$=(t,e,n,r=T)=>{switch(t.op){case"FFT":return[r.fft(A("x",t,e,n))];case"IFFT":return[r.ifft(A("x",t,e,n))];case"RFFT":return[r.rfft(A("x",t,e,n))];case"IRFFT":return[r.irfft(A("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}},tH=(t,e,n,r=T)=>{switch(t.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:i}=r.string.stringNGrams(A("data",t,e,n),A("dataSplits",t,e,n),A("separator",t,e,n),A("nGramWidths",t,e,n),A("leftPad",t,e,n),A("rightPad",t,e,n),A("padWidth",t,e,n),A("preserveShortSequences",t,e,n));return[a,i]}case"StringSplit":{let{indices:s,values:o,shape:u}=r.string.stringSplit(A("input",t,e,n),A("delimiter",t,e,n),A("skipEmpty",t,e,n));return[s,o,u]}case"StringToHashBucketFast":{let p=r.string.stringToHashBucketFast(A("input",t,e,n),A("numBuckets",t,e,n));return[p]}default:throw TypeError(`Node type ${t.op} is not implemented`)}},tG=(t,e,n,r=T)=>{switch(t.op){case"Cast":return[r.cast(A("x",t,e,n),A("dtype",t,e,n))];case"ExpandDims":{let a=A("axis",t,e,n);return[r.expandDims(A("x",t,e,n),a)]}case"Squeeze":{let i=A("axis",t,e,n);return[r.squeeze(A("x",t,e,n),i)]}case"Reshape":return[r.reshape(A("x",t,e,n),A("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(A("x",t,e,n),A("padding",t,e,n),A("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(A("x",t,e,n),A("padding",t,e,n),A("constantValue",t,e,n))];case"SpaceToBatchND":{let s=A("blockShape",t,e,n),o=A("paddings",t,e,n);return[r.spaceToBatchND(A("x",t,e,n),s,o)]}case"BatchToSpaceND":{let u=A("blockShape",t,e,n),p=A("crops",t,e,n);return[r.batchToSpaceND(A("x",t,e,n),u,p)]}case"DepthToSpace":{let l=A("blockSize",t,e,n),c=A("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(A("x",t,e,n),l,c)]}case"BroadcastTo":return[r.broadcastTo(A("x",t,e,n),A("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(A("s0",t,e,n),A("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function tW(t,e,n,r,a=S.lub){let i=((t,e,n)=>{switch(t.category){case"arithmetic":return a(()=>tg(t,e,n));case"basic_math":return a(()=>tv(t,e,n));case"control":return t_(t,e,n);case"convolution":return a(()=>tA(t,e,n));case"creation":return a(()=>tE(t,e,n));case"dynamic":return tk(t,e,n);case"evaluation":return a(()=>tI(t,e,n));case"image":return a(()=>tR(t,e,n));case"graph":return a(()=>tD(t,e,n));case"logical":return a(()=>tj(t,e,n));case"matrices":return a(()=>tP(t,e,n));case"normalization":return a(()=>tV(t,e,n));case"reduction":return a(()=>tB(t,e,n));case"slice_join":return a(()=>tz(t,e,n));case"sparse":return a(()=>tU(t,e,n));case"spectral":return a(()=>t$(t,e,n));case"string":return a(()=>tH(t,e,n));case"transformation":return a(()=>tG(t,e,n));case"hash_table":return tL(t,e,n,r);case"custom":let i=O[t.op];if(i&&i.customExecutor)return i.customExecutor(new td(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return S.D5U.isPromise(i)?i.then(t=>[].concat(t)):[].concat(i)}class tX{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let n in this.tensorListMap)this.tensorListMap[n].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ function tq(t,e,n,r){let a=new Set,i=[],s=null,o=null,u=new Set,p=Object.keys(t).map(t=>I(t)[0]),l=[];null!=r&&(l=r.map(t=>I(t.name)[0]));let c=[...e];for(;c.length>0;){let h=c.pop();if((tJ(h)||tY.indexOf(h.op)>=0||tQ.indexOf(h.op)>=0)&&null==s&&(o=(s=h).children.map(t=>t.name).filter(t=>a.has(t))),a.add(h.name),null==n[h.name]&&-1===p.indexOf(h.name)&&-1===l.indexOf(h.name)){if(0===h.inputs.length){i.push(h.name);continue}h.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),c.push(t))})}}return{inputs:t,outputs:e,usedNodes:a,missingInputs:i,dynamicNode:s,syncInputs:o}}let tK=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],tY=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],tQ=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function tJ(t){return tK.indexOf(t.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ class tZ{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new tZ(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){let n=tq(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){let s=e.map(t=>t.name),o=Object.keys(t);throw Error(`Cannot compute the outputs [${s}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return function(t,e,n){let{usedNodes:r,inputs:a}=n,i=[],s=Object.keys(a).map(t=>I(t)[0]).map(e=>t.nodes[e]),o=t.initNodes;s.forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)}),null!=o&&o.forEach(t=>{r.has(t.name)&&i.push(t)});let u=new Set,p=[];for(;i.length>0;){let l=i.pop();u.add(l.name),e[l.name]||p.push(l),l.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&i.push(t)})}return p}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let r=n.map(t=>this.graph.nodes[I(t)[0]]),a=e.map(t=>I(t)[0]),i=a.map(t=>this.graph.nodes[t]);this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);let s=this.getCompilationKey(r,i),o=this.compiledMap.get(s);null==o&&(o=this.compile(t,i),this.compiledMap.set(s,o));let u={},p={};return(0,S.lub)(()=>{let n=new tX(this.weightMap,u,p,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{let[n,a]=I(e),i=[];i[a]=t[e],r[n]=i});let i=this.getFrozenTensorIds(r),s={};for(let l=0;l<o.length;l++){let c=o[l];if(!r[c.name]){let h=tW(c,r,n,this._resourceManager);if(S.D5U.isPromise(h))throw Error(`The execution of the op '${c.op}' returned a promise. Please use model.executeAsync() instead.`);r[c.name]=h,this.checkTensorForDisposal(c.name,c,r,n,i,a,s)}}return null==this.parent&&n.dispose(i),e.map(t=>E(t,r,n))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,i,s){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(s[t.id]=(s[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){let i=n[k(t.name,r.currentContextId)];null!=i&&i.forEach(t=>{if(t&&!t.kept&&!a.has(t.id)){let n=s[t.id];if(1===n){if(this.keepTensorForDebug){let[i,o]=M(e.name,r);this.intermediateTensors[i]||(this.intermediateTensors[i]=[]),this.intermediateTensors[i][o]=t}else t.dispose();delete s[t.id]}else null!=n&&s[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{let e=this.tensorsMap[t];e.forEach(t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let t in this.intermediateTensors)this.intermediateTensors[t].forEach(t=>t.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=(0,S.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(i){console.warn(i.message)}this.resetIntermediateTensors();let s=new tX(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,s,e,n);let o=e.map(t=>E(t,this.tensorsMap,s)),u=o.map(t=>t.id),p=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...u,...p,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),o}async executeFunctionAsync(t,e,n){let r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){let a=Object.keys(t),i=a.map(t=>this.graph.nodes[I(t)[0]]),s=n.map(t=>I(t)[0]),o=s.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);let{usedNodes:u,missingInputs:p,dynamicNode:l,syncInputs:c}=tq(t,o,this.weightMap,this._initNodes),h=[...i,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),m=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{let[n,r]=I(e),a=[];a[r]=t[e],m[n]=a});let f={},d=this.getFrozenTensorIds(m),y={};for(;h.length>0;){let g=this.processStack(i,h,e,m,y,d,s,f,u);await Promise.all(g)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let v=o.filter(t=>!tJ(t)&&!E(t.name,m,e)).map(t=>t.name);if(v.length>0){let b="";throw null!=l&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),Error(`Cannot compute the outputs [${v}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${b}`)}return m}processStack(t,e,n,r,a,i,s,o,u){let p=[];for(;e.length>0;){let l=e.pop();n.currentContext=l.contexts;let c="";if("Enter"===l.node.op&&A("isConstant",l.node,r,n)&&([c]=M(l.node.name,n)),null==r[l.node.name]){let h=tW(l.node,r,n,this._resourceManager);c||([c]=M(l.node.name,n));let m=n.currentContext;S.D5U.isPromise(h)?p.push(h.then(t=>(r[c]=t,n.currentContext=m,this.checkTensorForDisposal(c,l.node,r,n,i,s,o),this.processChildNodes(l.node,e,n,r,a,u),t))):(r[c]=h,this.checkTensorForDisposal(c,l.node,r,n,i,s,o),this.processChildNodes(l.node,e,n,r,a,u))}else this.processChildNodes(l.node,e,n,r,a,u)}return p}processChildNodes(t,e,n,r,a,i){t.children.forEach(t=>{let[s]=M(t.name,n);!a[s]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!E(t,r,n))&&(a[s]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!E(t,r,n))&&(a[s]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[r]=I(e),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let i=a.attrParams.shape.value,s=i.length===n.shape.length&&n.shape.every((t,e)=>-1===i[e]||i[e]===t);S.D5U.assert(s,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&S.D5U.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){let e={};for(let n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){let r=this._signature.inputs[n];e[r.name]=t[n]}else e[n]=t[n];return e}checkInputs(t){let e=Object.keys(t).filter(t=>{let[e]=I(t);return null==this.graph.nodes[e]});if(e.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){let e=this._signature.outputs[t];return e.name}return t},{})}checkOutputs(t){t.forEach(t=>{let[e]=I(t);if(!this.graph.nodes[e])throw Error(`The output '${t}' is not found in the graph`)})}}class t1{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class t2{constructor(t,e={},n=S.io){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new t1}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return S.D5U.isPromise(t)?t.then(t=>this.loadSync(t)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let r=this.artifacts.userDefinedMetadata;null!=r.signature&&(n=r.signature),null!=r.structuredOutputKeys&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let a=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new tZ(tt.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){let i=tt.Instance.transformGraph(t.modelInitializer);this.initializer=new tZ(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){let n=this.io.getSaveHandlers(t);if(0===n.length)throw Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(null==t.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){let n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){let r=n instanceof S.esB?[n]:n,a={};return r.forEach((t,e)=>a[this.structuredOutputKeys[e]]=t),a}return n}normalizeInputs(t){if(!(t instanceof S.esB)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return Array.isArray(t=t||this.outputNodes)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function t3(t,e={},n=S.io){var r;if(null==t)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"==typeof t&&((r=t).endsWith("/")||(r+="/"),t=`${r}model.json?tfjs-format=file`);let a=new t2(t,e,n);return await a.load(),a}/**
    * @license
    * Copyright 2022 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */ var t4=function(){return(t4=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function t0(t,e,n,r){return new(n||(n=Promise))(function(a,i){function s(t){try{u(r.next(t))}catch(e){i(e)}}function o(t){try{u(r.throw(t))}catch(e){i(e)}}function u(t){var e;t.done?a(t.value):((e=t.value)instanceof n?e:new n(function(t){t(e)})).then(s,o)}u((r=r.apply(t,e||[])).next())})}function t6(t,e){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(o){i=[6,o],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function t5(t){var e=t.map(function(t){return t[0]});return e.push(t[t.length-1][1]),e}var t7={lips:t5([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:t5([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:t5([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:t5([[474,475],[475,476],[476,477],[477,474]]),rightEye:t5([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:t5([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:t5([[469,470],[470,471],[471,472],[472,469]]),faceOval:t5([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},t9=[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]],t8=Object.entries(t7).map(function(t){var e=t[0];return t[1].map(function(t){return[t,e]})}).flat(),et=new Map(t8);function ee(t){for(var e={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,a=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<t.length;++s){var o=t[s];n=Math.min(n,o.x),r=Math.max(r,o.x),a=Math.min(a,o.y),i=Math.max(i,o.y),e.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return e.locationData.relativeBoundingBox={xMin:n,yMin:a,xMax:r,yMax:i,width:r-n,height:i-a},e}var en={runtime:"mediapipe",maxFaces:1,refineLandmarks:!1},er=function(){function t(t){var e=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceMeshSolution=new w.FaceMesh({locateFile:function(e,n){return t.solutionPath?t.solutionPath.replace(/\/+$/,"")+"/"+e:n+"/"+e}}),this.faceMeshSolution.setOptions({refineLandmarks:t.refineLandmarks,selfieMode:this.selfieMode,maxNumFaces:t.maxFaces}),this.faceMeshSolution.onResults(function(t){if(e.height=t.image.height,e.width=t.image.width,e.faces=[],null!==t.multiFaceLandmarks)for(var n=t.multiFaceLandmarks,r=0;r<n.length;r++){var a=e.translateOutput(n[r]);e.faces.push({keypoints:a,box:ee(a).locationData.relativeBoundingBox})}})}return t.prototype.translateOutput=function(t){var e=this;return t.map(function(t,n){var r={x:t.x*e.width,y:t.y*e.height,z:t.z*e.width},a=et.get(n);return null!=a&&(r.name=a),r})},t.prototype.estimateFaces=function(t,e){return t0(this,void 0,void 0,function(){var n,r;return t6(this,function(a){switch(a.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.faceMeshSolution.setOptions({selfieMode:this.selfieMode})),t instanceof S.esB?(r=ImageData.bind,[4,S.Xhn.toPixels(t)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,a.label=3;case 3:return t=n,[4,this.faceMeshSolution.send({image:t})];case 4:return a.sent(),[2,this.faces]}})})},t.prototype.dispose=function(){this.faceMeshSolution.close()},t.prototype.reset=function(){this.faceMeshSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},t.prototype.initialize=function(){return this.faceMeshSolution.initialize()},t}(),ea="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{},ei={};(function(){function t(t){var e=0;return function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}}}var e="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){return t==Array.prototype||t==Object.prototype||(t[e]=n.value),t},n=function(t){t=["object"==typeof globalThis&&globalThis,t,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof ea&&ea];for(var e=0;e<t.length;++e){var n=t[e];if(n&&n.Math==Math)return n}throw Error("Cannot find global object")}(this);function r(t,r){if(r)e:{var a=n;t=t.split(".");for(var i=0;i<t.length-1;i++){var s=t[i];if(!(s in a))break e;a=a[s]}(r=r(i=a[t=t[t.length-1]]))!=i&&null!=r&&e(a,t,{configurable:!0,writable:!0,value:r})}}function a(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function i(t){if(!(t instanceof Array)){t=a(t);for(var e,n=[];!(e=t.next()).done;)n.push(e.value);t=n}return t}r("Symbol",function(t){function n(t,n){this.g=t,e(this,"description",{configurable:!0,writable:!0,value:n})}if(t)return t;n.prototype.toString=function(){return this.g};var r="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function t(e){if(this instanceof t)throw TypeError("Symbol is not a constructor");return new n(r+(e||"")+"_"+a++,e)}}),r("Symbol.iterator",function(r){if(r)return r;r=Symbol("Symbol.iterator");for(var a="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<a.length;i++){var s=n[a[i]];"function"==typeof s&&"function"!=typeof s.prototype[r]&&e(s.prototype,r,{configurable:!0,writable:!0,value:function(){var e;return(e={next:e=t(this)})[Symbol.iterator]=function(){return this},e}})}return r});var s,o,u="function"==typeof Object.create?Object.create:function(t){function e(){}return e.prototype=t,new e};if("function"==typeof Object.setPrototypeOf)o=Object.setPrototypeOf;else{e:{var p={};try{p.__proto__={a:!0},A=p.a;break e}catch(l){}A=!1}o=A?function(t,e){if(t.__proto__=e,t.__proto__!==e)throw TypeError(t+" is not extensible");return t}:null}var c=o;function h(t,e){if(t.prototype=u(e.prototype),t.prototype.constructor=t,c)c(t,e);else for(var n in e)if("prototype"!=n){if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(e,n);r&&Object.defineProperty(t,n,r)}else t[n]=e[n]}t.na=e.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function f(t){if(t.l)throw TypeError("Generator is already running");t.l=!0}function d(t,e){t.j={da:e,ea:!0},t.g=t.o||t.u}function y(t,e,n){return t.g=n,{value:e}}function g(t){this.g=new m,this.h=t}function v(t,e,n,r){try{var a=e.call(t.g.i,n);if(!(a instanceof Object))throw TypeError("Iterator result "+a+" is not an object");if(!a.done)return t.g.l=!1,a;var i=a.value}catch(s){return t.g.i=null,d(t.g,s),b(t)}return t.g.i=null,r.call(t.g,i),b(t)}function b(t){for(;t.g.g;)try{var e=t.h(t.g);if(e)return t.g.l=!1,{value:e.value,done:!1}}catch(n){t.g.h=void 0,d(t.g,n)}if(t.g.l=!1,t.g.j){if(e=t.g.j,t.g.j=null,e.ea)throw e.da;return{value:e.return,done:!0}}return{value:void 0,done:!0}}function x(t){this.next=function(e){return f(t.g),t.g.i?e=v(t,t.g.i.next,e,t.g.s):(t.g.s(e),e=b(t)),e},this.throw=function(e){return f(t.g),t.g.i?e=v(t,t.g.i.throw,e,t.g.s):(d(t.g,e),e=b(t)),e},this.return=function(e){var n;return f(t.g),(n=t.g.i)?v(t,"return"in n?n.return:function(t){return{value:t,done:!0}},e,t.g.return):(t.g.return(e),b(t))},this[Symbol.iterator]=function(){return this}}function N(t){return function(t){function e(e){return t.next(e)}function n(e){return t.throw(e)}return new Promise(function(r,a){!function t(i){i.done?r(i.value):Promise.resolve(i.value).then(e,n).then(t,a)}(t.next())})}(new x(new g(t)))}m.prototype.s=function(t){this.h=t},m.prototype.return=function(t){this.j={return:t},this.g=this.u},r("Promise",function(t){function e(t){this.h=0,this.i=void 0,this.g=[],this.s=!1;var e=this.j();try{t(e.resolve,e.reject)}catch(n){e.reject(n)}}function r(){this.g=null}function i(t){return t instanceof e?t:new e(function(e){e(t)})}if(t)return t;r.prototype.h=function(t){if(null==this.g){this.g=[];var e=this;this.i(function(){e.l()})}this.g.push(t)};var s=n.setTimeout;r.prototype.i=function(t){s(t,0)},r.prototype.l=function(){for(;this.g&&this.g.length;){var t=this.g;this.g=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(r){this.j(r)}}}this.g=null},r.prototype.j=function(t){this.i(function(){throw t})},e.prototype.j=function(){function t(t){return function(r){n||(n=!0,t.call(e,r))}}var e=this,n=!1;return{resolve:t(this.D),reject:t(this.l)}},e.prototype.D=function(t){if(t===this)this.l(TypeError("A Promise cannot resolve to itself"));else if(t instanceof e)this.H(t);else{e:switch(typeof t){case"object":var n=null!=t;break e;case"function":n=!0;break e;default:n=!1}n?this.A(t):this.o(t)}},e.prototype.A=function(t){var e=void 0;try{e=t.then}catch(n){return void this.l(n)}"function"==typeof e?this.I(e,t):this.o(t)},e.prototype.l=function(t){this.u(2,t)},e.prototype.o=function(t){this.u(1,t)},e.prototype.u=function(t,e){if(0!=this.h)throw Error("Cannot settle("+t+", "+e+"): Promise already settled in state"+this.h);this.h=t,this.i=e,2===this.h&&this.G(),this.B()},e.prototype.G=function(){var t=this;s(function(){if(t.C()){var e=n.console;void 0!==e&&e.error(t.i)}},1)},e.prototype.C=function(){if(this.s)return!1;var t=n.CustomEvent,e=n.Event,r=n.dispatchEvent;return void 0===r||("function"==typeof t?t=new t("unhandledrejection",{cancelable:!0}):"function"==typeof e?t=new e("unhandledrejection",{cancelable:!0}):(t=n.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,t),t.promise=this,t.reason=this.i,r(t))},e.prototype.B=function(){if(null!=this.g){for(var t=0;t<this.g.length;++t)o.h(this.g[t]);this.g=null}};var o=new r;return e.prototype.H=function(t){var e=this.j();t.M(e.resolve,e.reject)},e.prototype.I=function(t,e){var n=this.j();try{t.call(e,n.resolve,n.reject)}catch(r){n.reject(r)}},e.prototype.then=function(t,n){function r(t,e){return"function"==typeof t?function(e){try{a(t(e))}catch(n){i(n)}}:e}var a,i,s=new e(function(t,e){a=t,i=e});return this.M(r(t,a),r(n,i)),s},e.prototype.catch=function(t){return this.then(void 0,t)},e.prototype.M=function(t,e){function n(){switch(r.h){case 1:t(r.i);break;case 2:e(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.s=!0},e.resolve=i,e.reject=function(t){return new e(function(e,n){n(t)})},e.race=function(t){return new e(function(e,n){for(var r=a(t),s=r.next();!s.done;s=r.next())i(s.value).M(e,n)})},e.all=function(t){var n=a(t),r=n.next();return r.done?i([]):new e(function(t,e){var a=[],s=0;do a.push(void 0),s++,i(r.value).M(function(e){return function(n){a[e]=n,0==--s&&t(a)}}(a.length-1),e),r=n.next();while(!r.done)})},e});var T="function"==typeof Object.assign?Object.assign:function(t,e){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(t[a]=r[a])}return t};r("Object.assign",function(t){return t||T}),r("Object.is",function(t){return t||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}}),r("Array.prototype.includes",function(t){return t||function(t,e){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(e=e||0)&&(e=Math.max(e+r,0));e<r;e++){var a=n[e];if(a===t||Object.is(a,t))return!0}return!1}}),r("String.prototype.includes",function(t){return t||function(t,e){if(null==this)throw TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(t instanceof RegExp)throw TypeError("First argument to String.prototype.includes must not be a regular expression");return -1!==this.indexOf(t,e||0)}}),r("Array.prototype.keys",function(t){return t||function(){var t,e,n,r,a;return t=this,e=function(t){return t},t instanceof String&&(t+=""),n=0,r=!1,(a={next:function(){if(!r&&n<t.length){var a=n++;return{value:e(a,t[a]),done:!1}}return r=!0,{done:!0,value:void 0}}})[Symbol.iterator]=function(){return a},a}});var w=this||self;function S(t,e){t=t.split(".");var n,r=w;for((t[0]in r)||void 0===r.execScript||r.execScript("var "+t[0]);t.length&&(n=t.shift());)t.length||void 0===e?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=e}function _(){throw Error("Invalid UTF8")}function O(t,e){return e=String.fromCharCode.apply(null,e),null==t?e:t+e}var A,E,M,k="undefined"!=typeof TextDecoder,I="undefined"!=typeof TextEncoder,D={},F=null;function C(t){var e;void 0===e&&(e=0),R(),e=D[e];for(var n=Array(Math.floor(t.length/3)),r=e[64]||"",a=0,i=0;a<t.length-2;a+=3){var s=t[a],o=t[a+1],u=t[a+2],p=e[s>>2];s=e[(3&s)<<4|o>>4],o=e[(15&o)<<2|u>>6],u=e[63&u],n[i++]=p+s+o+u}switch(p=0,u=r,t.length-a){case 2:u=e[(15&(p=t[a+1]))<<2]||r;case 1:t=t[a],n[i]=e[t>>2]+e[(3&t)<<4|p>>4]+u+r}return n.join("")}function L(t){var e=t.length,n=3*e/4;n%3?n=Math.floor(n):-1!="=.".indexOf(t[e-1])&&(n=-1!="=.".indexOf(t[e-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(t,e){function n(e){for(;r<t.length;){var n=t.charAt(r++),a=F[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}R();for(var r=0;;){var a=n(-1),i=n(0),s=n(64),o=n(64);if(64===o&&-1===a)break;e(a<<2|i>>4),64!=s&&(e(i<<4&240|s>>2),64!=o&&e(s<<6&192|o))}}(t,function(t){r[a++]=t}),a!==n?r.subarray(0,a):r}function R(){if(!F){F={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=t.concat(e[n].split(""));D[n]=r;for(var a=0;a<r.length;a++){var i=r[a];void 0===F[i]&&(F[i]=a)}}}}var j,P="function"==typeof Uint8Array;function V(t){return P&&null!=t&&t instanceof Uint8Array}function B(t){if(this.L=t,null!==t&&0===t.length)throw Error("ByteString should be constructed with non-empty values")}var z="function"==typeof Uint8Array.prototype.slice,U=0;function $(t,e){return Error("Invalid wire type: "+t+" (at position "+e+")")}function H(){return Error("Failed to read varint, encoding is invalid.")}function G(t,e){e=void 0!==(e=void 0===e?{}:e).v&&e.v,this.h=null,this.g=this.i=this.j=0,this.v=e,t&&W(this,t)}function W(t,e){t.h=function(t,e){if(t.constructor===Uint8Array)return t;if(t.constructor===ArrayBuffer||t.constructor===Array)return new Uint8Array(t);if(t.constructor===String)return L(t);if(t.constructor===B)return!e&&(e=t.L)&&e.constructor===Uint8Array?e:(e=null==(e=t.L)||V(e)?e:"string"==typeof e?L(e):null,(t=t.L=e)?new Uint8Array(t):j||(j=new Uint8Array(0)));if(t instanceof Uint8Array)return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(e,t.v),t.j=0,t.i=t.h.length,t.g=t.j}function X(t){if(t.g>t.i)throw Error("Tried to read past the end of the data "+t.g+" > "+t.i)}function q(t){var e=t.h,n=e[t.g],r=127&n;if(128>n)return t.g+=1,X(t),r;if(r|=(127&(n=e[t.g+1]))<<7,128>n)return t.g+=2,X(t),r;if(r|=(127&(n=e[t.g+2]))<<14,128>n)return t.g+=3,X(t),r;if(r|=(127&(n=e[t.g+3]))<<21,128>n)return t.g+=4,X(t),r;if(n=e[t.g+4],t.g+=5,r|=(15&n)<<28,128>n)return X(t),r;if(128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++])throw H();return X(t),r}G.prototype.reset=function(){this.g=this.j};var K=[];function Y(){this.g=[]}function Q(t,e){for(;127<e;)t.g.push(127&e|128),e>>>=7;t.g.push(e)}function J(t){var e={},n=void 0!==e.W&&e.W;this.l={v:void 0!==e.v&&e.v},this.W=n,e=this.l,K.length?(n=K.pop(),e&&(n.v=e.v),t&&W(n,t),t=n):t=new G(t,e),this.g=t,this.j=this.g.g,this.h=this.i=-1}function Z(t){var e=t.g;if(e.g==e.i)return!1;t.j=t.g.g;var n=q(t.g)>>>0;if(e=n>>>3,!(0<=(n&=7)&&5>=n))throw $(n,t.j);if(1>e)throw Error("Invalid field number: "+e+" (at position "+t.j+")");return t.i=e,t.h=n,!0}Y.prototype.length=function(){return this.g.length},Y.prototype.end=function(){var t=this.g;return this.g=[],t},J.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var tt=[];function te(){this.i=[],this.h=0,this.g=new Y}function tn(t,e){0!==e.length&&(t.i.push(e),t.h+=e.length)}var tr="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol(void 0):void 0;function ta(t,e){Object.isFrozen(t)||(tr?t[tr]|=e:void 0!==t.N?t.N|=e:Object.defineProperties(t,{N:{value:e,configurable:!0,writable:!0,enumerable:!1}}))}function ti(t){var e;return null==(e=tr?t[tr]:t.N)?0:e}function ts(t){return ta(t,1),t}function to(t){return!!Array.isArray(t)&&!!(2&ti(t))}function tu(t){if(!Array.isArray(t))throw Error("cannot mark non-array as immutable");ta(t,2)}function tp(t){return null!==t&&"object"==typeof t&&!Array.isArray(t)&&t.constructor===Object}var tl=Object.freeze(ts([]));function tc(t){if(to(t.m))throw Error("Cannot mutate an immutable Message")}var th,tm="undefined"!=typeof Symbol&&void 0!==Symbol.hasInstance;function tf(t){return{value:t,configurable:!1,writable:!1,enumerable:!1}}function td(t,e,n){return -1===e?null:e>=t.i?t.g?t.g[e]:void 0:void 0!==n&&n&&t.g&&null!=(n=t.g[e])?n:t.m[e+t.h]}function ty(t,e,n,r){r=void 0!==r&&r,tc(t),e<t.i&&!r?t.m[e+t.h]=n:(t.g||(t.g=t.m[t.i+t.h]={}))[e]=n}function tg(t,e,n,r){n=void 0===n||n;var a=td(t,e,r=void 0!==r&&r);return null==a&&(a=tl),to(t.m)?n&&(tu(a),Object.freeze(a)):(a===tl||to(a))&&ty(t,e,a=ts(a.slice()),r),a}function tv(t,e,n){return null==(t=null==(t=td(t,e))?t:+t)?void 0===n?0:n:t}function tb(t,e,n,r){t.j||(t.j={});var a=to(t.m),i=t.j[n];if(!i){r=tg(t,n,!0,void 0!==r&&r),i=[],a=a||to(r);for(var s=0;s<r.length;s++)i[s]=new e(r[s]),a&&tu(i[s].m);a&&(tu(i),Object.freeze(i)),t.j[n]=i}return i}function tx(t,e,n,r,a){var i=void 0!==i&&i;return tc(t),i=tb(t,n,e,i),n=r||new n,t=tg(t,e),null!=a?(i.splice(a,0,n),t.splice(a,0,n.m)):(i.push(n),t.push(n.m)),n}function tN(t,e){return null==(t=td(t,e))?0:t}function tT(t,e){return null==(t=td(t,e))?"":t}function tw(t){var e=tS;return function t(e,n){for(var r=e.slice(),a=0;a<r.length;a++)r[a]=function e(n,r){if(null!=n){if(Array.isArray(n))n=t(n,r);else if(tp(n)){var a,i={};for(a in n)i[a]=e(n[a],r);n=i}else n=r(n);return n}}(r[a],n);return Array.isArray(e)&&1&ti(e)&&ts(r),r}(t,e=void 0===e?t_:e)}function tS(t){return t&&"object"==typeof t&&t.toJSON?t.toJSON():Array.isArray(t=function(t){switch(typeof t){case"number":return isFinite(t)?t:String(t);case"object":if(t&&!Array.isArray(t)){if(V(t))return C(t);if(t instanceof B){var e=t.L;return e=null==e||"string"==typeof e?e:P&&e instanceof Uint8Array?C(e):null,(t.L=e)||""}}}return t}(t))?tw(t):t}function t_(t){return V(t)?new Uint8Array(t):t}function tO(t,e,n){t||(t=th),th=null;var r=this.constructor.h;if(t||(t=r?[r]:[]),this.h=(r?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=t,t=(r=this.m.length)-1,r&&tp(r=this.m[t])?(this.i=t-this.h,this.g=r):void 0!==e&&-1<e?(this.i=Math.max(e,t+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,n)for(e=0;e<n.length;e++)if((t=n[e])<this.i)t+=this.h,(r=this.m[t])?Array.isArray(r)&&ts(r):this.m[t]=tl;else{var a=(r=this.g||(this.g=this.m[this.i+this.h]={}))[t];a?Array.isArray(a)&&ts(a):r[t]=tl}}function tA(){tO.apply(this,arguments)}if(tO.prototype.toJSON=function(){return tw(this.m)},tO.prototype.toString=function(){return this.m.toString()},h(tA,tO),tm){var tE={};Object.defineProperties(tA,(tE[Symbol.hasInstance]=tf(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),tE))}function tM(t,e,n){if(n){var r,a={};for(r in n){var i=n[r],s=i.ha;s||(a.F=i.la||i.fa.P,i.aa?(a.U=tL(i.aa),s=function(t){return function(e,n,r){return t.F(e,n,r,t.U)}}(a)):i.ca?(a.T=tR(i.X.g,i.ca),s=function(t){return function(e,n,r){return t.F(e,n,r,t.T)}}(a)):s=a.F,i.ha=s),s(e,t,i.X),a={F:a.F,U:a.U,T:a.T}}}!function(t,e){if(e=e.ba){tn(t,t.g.end());for(var n=0;n<e.length;n++)tn(t,e[n])}}(e,t)}var tk=Symbol();function tI(t,e,n){return t[tk]||(t[tk]=function(t,r){return e(t,r,n)})}function tD(t){var e=t[tk];if(!e){var n=tq(t);e=function(t,e){return tK(t,e,n)},t[tk]=e}return e}function tF(t,e,n,r,a,i){var s=0;for((t=t()).length&&"number"!=typeof t[0]&&(n(e,t[0]),s++);s<t.length;){n=t[s++];for(var o=s+1;o<t.length&&"number"!=typeof t[o];)o++;var u=t[s++];switch(o-=s){case 0:r(e,n,u);break;case 1:r(e,n,u,t[s++]);break;case 2:a(e,n,u,t[s++],t[s++]);break;case 3:o=t[s++];var p=t[s++],l=t[s++];Array.isArray(l)?a(e,n,u,o,p,l):i(e,n,u,o,p,l);break;case 4:i(e,n,u,t[s++],t[s++],t[s++],t[s++]);break;default:throw Error("unexpected number of binary field arguments: "+o)}}return e}var tC=Symbol();function tL(t){var e=t[tC];if(!e){var n=tU(t);e=function(t,e){return tQ(t,e,n)},t[tC]=e}return e}function tR(t,e){var n=t[tC];return n||(n=function(t,n){return tM(t,n,e)},t[tC]=n),n}var tj=Symbol();function tP(t,e){t.push(e)}function tV(t,e,n){t.push(e,n.P)}function tB(t,e,n,r,a){var i=tL(a),s=n.P;t.push(e,function(t,e,n){return s(t,e,n,r,i)})}function tz(t,e,n,r,a,i){var s=tR(r,i),o=n.P;t.push(e,function(t,e,n){return o(t,e,n,r,s)})}function tU(t){return t[tj]||tF(t,t[tj]=[],tP,tV,tB,tz)}var t$=Symbol();function tH(t,e){t[0]=e}function tG(t,e,n,r){var a=n.O;t[e]=r?function(t,e,n){return a(t,e,n,r)}:a}function tW(t,e,n,r,a,i){var s=n.O,o=tD(a);t[e]=function(t,e,n){return s(t,e,n,r,o,i)}}function tX(t,e,n,r,a,i,s){var o=n.O,u=tI(r,a,i);t[e]=function(t,e,n){return o(t,e,n,r,u,s)}}function tq(t){return t[t$]||tF(t,t[t$]={},tH,tG,tW,tX)}function tK(t,e,n){for(;Z(e)&&4!=e.h;){var r=e.i,a=n[r];if(!a){var i=n[0];i&&(i=i[r])&&(a=n[r]=function(t){var e,n=(e=t.aa)?tD(e):(e=t.ka)?tI(t.X.g,e,t.ca):void 0,r=t.X,a=t.fa.O;return n?function(t,e){return a(t,e,r,n)}:function(t,e){return a(t,e,r)}}(i))}if(!(a&&a(e,t,r)||(a=e,r=t,i=a.j,function t(e){switch(e.h){case 0:if(0!=e.h)t(e);else e:{for(var n=(e=e.g).g,r=n+10;n<r;)if(0==(128&e.h[n++])){e.g=n,X(e);break e}throw H()}break;case 1:(e=e.g).g+=8,X(e);break;case 2:2!=e.h?t(e):(n=q(e.g)>>>0,(e=e.g).g+=n,X(e));break;case 5:(e=e.g).g+=4,X(e);break;case 3:for(n=e.i;;){if(!Z(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.h){if(e.i!=n)throw Error("Unmatched end-group tag");break}t(e)}break;default:throw $(e.h,e.j)}}(a),a.W))){var s=a.g.h;a=i===(a=a.g.g)?j||(j=new Uint8Array(0)):z?s.slice(i,a):new Uint8Array(s.subarray(i,a)),(i=r.ba)?i.push(a):r.ba=[a]}}return t}function tY(t,e,n){if(tt.length){var r=tt.pop();t&&(W(r.g,t),r.i=-1,r.h=-1),t=r}else t=new J(t);try{return tK(new e,t,tq(n))}finally{(e=t.g).h=null,e.j=0,e.i=0,e.g=0,e.v=!1,t.i=-1,t.h=-1,100>tt.length&&tt.push(t)}}function tQ(t,e,n){for(var r=n.length,a=1==r%2,i=a?1:0;i<r;i+=2)(0,n[i+1])(e,t,n[i]);tM(t,e,a?n[0]:void 0)}function tJ(t,e){var n=new te;tQ(t,n,tU(e)),tn(n,n.g.end()),t=new Uint8Array(n.h);for(var r=(e=n.i).length,a=0,i=0;i<r;i++){var s=e[i];t.set(s,a),a+=s.length}return n.i=[t],t}function tZ(t,e){return{O:t,P:e}}var t1=tZ(function(t,e,n){if(5!==t.h)return!1;var r=(t=t.g).h[t.g],a=t.h[t.g+1],i=t.h[t.g+2],s=t.h[t.g+3];return t.g+=4,X(t),t=2*((a=(r<<0|a<<8|i<<16|s<<24)>>>0)>>31)+1,r=a>>>23&255,a&=8388607,ty(e,n,255==r?a?NaN:1/0*t:0==r?1401298464324817e-60*t*a:t*Math.pow(2,r-150)*(a+8388608)),!0},function(t,e,n){if(null!=(e=td(e,n))){Q(t.g,8*n+5),t=t.g;var r=e;0===(r=(n=0>r?1:0)?-r:r)?U=0<1/r?0:2147483648:isNaN(r)?U=2147483647:34028234663852886e22<r?U=(n<<31|2139095040)>>>0:11754943508222875e-54>r?U=(n<<31|(r=Math.round(r/1401298464324817e-60)))>>>0:(e=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-e),16777216<=(r=Math.round(8388608*r))&&++e,U=(n<<31|e+127<<23|8388607&r)>>>0),n=U,t.g.push(n>>>0&255),t.g.push(n>>>8&255),t.g.push(n>>>16&255),t.g.push(n>>>24&255)}}),t2=tZ(function(t,e,n){if(0!==t.h)return!1;for(var r=t.g,a=128,i=0,s=t=0;4>s&&128<=a;s++)a=r.h[r.g++],X(r),i|=(127&a)<<7*s;if(128<=a&&(a=r.h[r.g++],X(r),i|=(127&a)<<28,t|=(127&a)>>4),128<=a)for(s=0;5>s&&128<=a;s++)a=r.h[r.g++],X(r),t|=(127&a)<<7*s+3;if(!(128>a))throw H();return r=i>>>0,(t=2147483648&(a=t>>>0))&&(a=~a>>>0,0==(r=1+~r>>>0)&&(a=a+1>>>0)),r=4294967296*a+(r>>>0),ty(e,n,t?-r:r),!0},function(t,e,n){if(null!=(e=td(e,n))&&null!=e){Q(t.g,8*n),t=t.g;var r=e;for(n=0>r,e=(r=Math.abs(r))>>>0,r=Math.floor((r-e)/4294967296),r>>>=0,n&&(r=~r>>>0,4294967295<(e=1+(~e>>>0))&&(e=0,4294967295<++r&&(r=0))),n=U=e,e=r;0<e||127<n;)t.g.push(127&n|128),n=(n>>>7|e<<25)>>>0,e>>>=7;t.g.push(n)}}),t3=tZ(function(t,e,n){return 0===t.h&&(ty(e,n,q(t.g)),!0)},function(t,e,n){if(null!=(e=td(e,n))&&null!=e){if(Q(t.g,8*n),t=t.g,0<=(n=e))Q(t,n);else{for(e=0;9>e;e++)t.g.push(127&n|128),n>>=7;t.g.push(1)}}}),t4=tZ(function(t,e,n){if(2!==t.h)return!1;var r,a=q(t.g)>>>0,i=(t=t.g).g;if(t.g+=a,X(t),t=t.h,k)(r=E)||(r=E=new TextDecoder("utf-8",{fatal:!0})),r=r.decode(t.subarray(i,i+a));else{a=i+a;for(var s,o,u,p=[],l=null;i<a;)128>(s=t[i++])?p.push(s):224>s?i>=a?_():(o=t[i++],194>s||128!=(192&o)?(i--,_()):p.push((31&s)<<6|63&o)):240>s?i>=a-1?_():128!=(192&(o=t[i++]))||224===s&&160>o||237===s&&160<=o||128!=(192&(r=t[i++]))?(i--,_()):p.push((15&s)<<12|(63&o)<<6|63&r):244>=s?i>=a-2?_():128!=(192&(o=t[i++]))||0!=o-144+(s<<28)>>30||128!=(192&(r=t[i++]))||128!=(192&(u=t[i++]))?(i--,_()):(s=(7&s)<<18|(63&o)<<12|(63&r)<<6|63&u,s-=65536,p.push(55296+(s>>10&1023),56320+(1023&s))):_(),8192<=p.length&&(l=O(l,p),p.length=0);r=O(l,p)}return ty(e,n,r),!0},function(t,e,n){if(null!=(e=td(e,n))){if(I)e=(M||(M=new TextEncoder)).encode(e);else{for(var r=0,a=new Uint8Array(3*e.length),i=0;i<e.length;i++){var s=e.charCodeAt(i);if(128>s)a[r++]=s;else{if(2048>s)a[r++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&i<e.length){var o=e.charCodeAt(++i);if(56320<=o&&57343>=o){s=1024*(s-55296)+o-56320+65536,a[r++]=s>>18|240,a[r++]=s>>12&63|128,a[r++]=s>>6&63|128,a[r++]=63&s|128;continue}i--}s=65533}a[r++]=s>>12|224,a[r++]=s>>6&63|128}a[r++]=63&s|128}}e=a.subarray(0,r)}Q(t.g,8*n+2),Q(t.g,e.length),tn(t,t.g.end()),tn(t,e)}}),t0=tZ(function(t,e,n,r,a){if(2!==t.h)return!1;e=tx(e,n,r),n=t.g.i,r=q(t.g)>>>0;var i=t.g.g+r,s=i-n;if(0>=s&&(t.g.i=i,a(e,t),s=i-t.g.g),s)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return t.g.g=i,t.g.i=n,!0},function(t,e,n,r,a){if(null!=(e=tb(e,r,n)))for(r=0;r<e.length;r++){var i=t;Q(i.g,8*n+2);var s=i.g.end();tn(i,s),s.push(i.h),i=s,a(e[r],t),s=t;var o=i.pop();for(o=s.h+s.g.length()-o;127<o;)i.push(127&o|128),o>>>=7,s.h++;i.push(o),s.h++}});function t6(){tA.apply(this,arguments)}if(h(t6,tA),tm){var t5={};Object.defineProperties(t6,(t5[Symbol.hasInstance]=tf(Object[Symbol.hasInstance]),t5))}function t7(t){t6.call(this,t)}function t9(){return[1,t3,2,t1,3,t4,4,t4]}function t8(t){t6.call(this,t,-1,ee)}function et(){return[1,t0,t7,t9]}h(t7,t6),h(t8,t6),t8.prototype.addClassification=function(t,e){return tx(this,1,t7,t,e),this};var ee=[1];function en(t){t6.call(this,t)}function er(){return[1,t1,2,t1,3,t1,4,t1,5,t1]}function ei(t){t6.call(this,t,-1,eo)}function es(){return[1,t0,en,er]}h(en,t6),h(ei,t6);var eo=[1];function eu(t){t6.call(this,t)}function ep(){return[1,t1,2,t1,3,t1,4,t1,5,t1,6,t2]}h(eu,t6);var el=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],ec=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],eh=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],em=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],ef=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],ed=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],ey=[].concat(i(el),i(ec),i(eh),i(em),i(ef),i(ed));function eg(t,e,n){if(n=t.createShader(0===n?t.VERTEX_SHADER:t.FRAGMENT_SHADER),t.shaderSource(n,e),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+t.getShaderInfoLog(n));return n}function ev(t){return{x:tv(t,1),y:tv(t,2),z:tv(t,3),visibility:null!=td(t,4)?tv(t,4):void 0}}function eb(t,e){this.h=t,this.g=e,this.l=0}function ex(t,e,n){return function(t,e){var n=t.g;if(void 0===t.o){var r=eg(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=eg(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,a),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(i));r=t.o=i,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),t.j={K:n.getAttribLocation(r,"aVertex"),J:n.getAttribLocation(r,"aTex"),ma:a},t.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.u),n.enableVertexAttribArray(t.j.K),n.vertexAttribPointer(t.j.K,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),t.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.enableVertexAttribArray(t.j.J),n.vertexAttribPointer(t.j.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=t.j,n.useProgram(t.o),n.canvas.width=e.width,n.canvas.height=e.height,n.viewport(0,0,e.width,e.height),n.activeTexture(n.TEXTURE0),t.h.bindTexture2d(e.glName),n.enableVertexAttribArray(r.K),n.bindBuffer(n.ARRAY_BUFFER,t.u),n.vertexAttribPointer(r.K,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.vertexAttribPointer(r.J,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.K),n.disableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,null),t.h.bindTexture2d(0)}(t,e),"function"==typeof t.g.canvas.transferToImageBitmap?Promise.resolve(t.g.canvas.transferToImageBitmap()):n?Promise.resolve(t.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(t.g.canvas):(void 0===t.i&&(t.i=document.createElement("canvas")),new Promise(function(e){t.i.height=t.g.canvas.height,t.i.width=t.g.canvas.width,t.i.getContext("2d",{}).drawImage(t.g.canvas,0,0,t.g.canvas.width,t.g.canvas.height),e(t.i)}))}function eN(t){this.g=t}var eT=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ew(t,e){return e+t}function eS(t){if(this.g=t,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=t&&t.locateFile||ew,"object"==typeof window)var e=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");e=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=e,t.options)for(var n=(e=a(Object.keys(t.options))).next();!n.done;n=e.next()){n=n.value;var r=t.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function e_(t,e){var n,r;return N(function(a){return e in t.H?a.return(t.H[e]):(n=t.locateFile(e,""),r=fetch(n).then(function(t){return t.arrayBuffer()}),t.H[e]=r,a.return(r))})}function eO(t){var e=this;t=t||{};var n={url:"face_detection_short.binarypb"},r={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new eS({locateFile:t.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:n,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(t){var i,s,o,u,p;return N(function(l){switch(l.g){case 1:s=(i=a("short"===t?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"])).next();case 2:if(s.done){l.g=4;break}return u="third_party/mediapipe/modules/face_detection/"+(o=s.value),y(l,e_(e.g,o),5);case 5:p=l.h,e.g.overrideFile(u,p),s=i.next(),l.g=2;break;case 4:return n.url="short"===t?"face_detection_short.binarypb":"face_detection_full.binarypb",r.graphOptionXref.calculatorName="short"===t?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",l.return(!0)}})}},minDetectionConfidence:r}})}(s=eS.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},s.reset=function(){var t=this;return N(function(e){t.i&&(t.i.reset(),t.o={},t.u={}),e.g=0})},s.setOptions=function(t,e){var n=this;if(e=e||this.g.options){for(var r=[],i=[],s={},o=a(Object.keys(t)),u=o.next();!u.done;s={R:s.R,S:s.S},u=o.next()){var p=u.value;p in this.j&&this.j[p]===t[p]||(this.j[p]=t[p],void 0!==(u=e[p])&&(u.onChange&&(s.R=u.onChange,s.S=t[p],r.push(function(t){return function(){return N(function(e){if(1==e.g)return y(e,t.R(t.S),2);!0===e.h&&(n.s=!0),e.g=0})}}(s))),u.graphOptionXref&&(p={valueNumber:1===u.type?t[p]:0,valueBoolean:0===u.type&&t[p],valueString:2===u.type?t[p]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),p),i.push(u))))}0===r.length&&0===i.length||(this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(i),this.A=(void 0===this.A?[]:this.A).concat(r))}},s.initialize=function(){var t=this;return N(function(e){var n,r,s,o,u,p,l,c,h,m,f,d,g,v,b,x,T,w,S,_,O,A,E,M,k,I,D;return 1==e.g?y(e,(n=t,N(function(t){switch(t.g){case 1:return n.Z?(r=void 0===n.g.files?[]:"function"==typeof n.g.files?n.g.files(n.j):n.g.files,y(t,N(function(t){switch(t.g){case 1:return t.o=2,y(t,WebAssembly.instantiate(eT),4);case 4:t.g=3,t.o=0;break;case 2:return t.o=0,t.j=null,t.return(!1);case 3:return t.return(!0)}}),2)):t.return();case 2:if(s=t.h,"object"==typeof window){var e,a;return e={locateFile:n.locateFile},window.createMediapipeSolutionsWasm=e,a={locateFile:n.locateFile},window.createMediapipeSolutionsPackedAssets=a,l=r.filter(function(t){return void 0!==t.data}),c=r.filter(function(t){return void 0===t.data}),h=Promise.all(l.map(function(t){var e=e_(n,t.url);if(void 0!==t.path){var r=t.path;e=e.then(function(t){return n.overrideFile(r,t),Promise.resolve(t)})}return e})),m=Promise.all(c.map(function(t){var e,r;return void 0===t.simd||t.simd&&s||!t.simd&&!s?(e=n.locateFile(t.url,n.$),(r=document.createElement("script")).setAttribute("src",e),r.setAttribute("crossorigin","anonymous"),new Promise(function(t){r.addEventListener("load",function(){t()},!1),r.addEventListener("error",function(){t()},!1),document.body.appendChild(r)})):Promise.resolve()})).then(function(){var t,e,r;return N(function(a){if(1==a.g)return t=window.createMediapipeSolutionsWasm,e=window.createMediapipeSolutionsPackedAssets,r=n,y(a,t(e),2);r.h=a.h,a.g=0})}),f=N(function(t){return n.g.graph&&n.g.graph.url?t=y(t,e_(n,n.g.graph.url),0):(t.g=0,t=void 0),t}),y(t,Promise.all([m,h,f]),7)}if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return o=r.filter(function(t){return void 0===t.simd||t.simd&&s||!t.simd&&!s}).map(function(t){return n.locateFile(t.url,n.$)}),importScripts.apply(null,i(o)),u=n,y(t,createMediapipeSolutionsWasm(Module),6);case 6:u.h=t.h,n.l=new OffscreenCanvas(1,1),n.h.canvas=n.l,p=n.h.GL.createContext(n.l,{antialias:!1,alpha:!1,ja:"undefined"!=typeof WebGL2RenderingContext?2:1}),n.h.GL.makeContextCurrent(p),t.g=4;break;case 7:if(n.l=document.createElement("canvas"),!(d=n.l.getContext("webgl2",{}))&&!(d=n.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),t.return();n.G=d,n.h.canvas=n.l,n.h.createContext(n.l,!0,!0,{});case 4:n.i=new n.h.SolutionWasm,n.Z=!1,t.g=0}})),2):3!=e.g?y(e,(g=t,N(function(t){if(1==t.g)return g.g.graph&&g.g.graph.url&&g.Y===g.g.graph.url?t.return():(g.s=!0,g.g.graph&&g.g.graph.url?(g.Y=g.g.graph.url,y(t,e_(g,g.g.graph.url),3)):void(t.g=2));for(2!=t.g&&(v=t.h,g.i.loadGraph(v)),x=(b=a(Object.keys(g.C))).next();!x.done;x=b.next())T=x.value,g.i.overrideFile(T,g.C[T]);if(g.C={},g.g.listeners)for(S=(w=a(g.g.listeners)).next();!S.done;S=w.next())(function(t,e){for(var n=e.name||"$",r=[].concat(i(e.wants)),s=new t.h.StringList,o=a(e.wants),u=o.next();!u.done;u=o.next())s.push_back(u.value);o=t.h.PacketListener.implement({onResults:function(i){for(var s,o,u,p,l,c,h,m,f,d,g,v,b,x,T,w={},S=0;S<e.wants.length;++S)w[r[S]]=i.get(S);var _=t.listeners[n];_&&(t.D=(s=t,o=e.outs,N(function(t){switch(t.g){case 1:if(!o)return t.return(w);for(u={},p=0,c=(l=a(Object.keys(o))).next();!c.done;c=l.next())"string"!=typeof(h=o[c.value])&&"texture"===h.type&&void 0!==w[h.stream]&&++p;1<p&&(s.I=!1),c=(m=a(Object.keys(o))).next();case 2:if(c.done){t.g=4;break}if("string"==typeof(d=o[f=c.value])){var e,n,r,i;return x=u,T=f,y(t,(e=s,n=f,r=w[d],N(function(t){return"number"==typeof r||r instanceof Uint8Array||r instanceof e.h.Uint8BlobList?t.return(r):r instanceof e.h.Texture2dDataOut?((i=e.u[n])||(i=new eb(e.h,e.G),e.u[n]=i),t.return(ex(i,r,e.I))):t.return(void 0)})),14)}if(g=w[d.stream],"detection_list"===d.type){if(g){for(var S=g.getRectList(),_=g.getLandmarksList(),O=g.getClassificationsList(),A=[],E=0;E<S.size();++E){var M=tY(S.get(E),eu,ep);M={boundingBox:{xCenter:tv(M,1),yCenter:tv(M,2),height:tv(M,3),width:tv(M,4),rotation:tv(M,5,0),rectId:tN(M,6)},landmarks:tb(tY(_.get(E),ei,es),en,1).map(ev),V:tb(tY(O.get(E),t8,et),t7,1).map(function(t){return{index:tN(t,1),ga:tv(t,2),label:null!=td(t,3)?tT(t,3):void 0,displayName:null!=td(t,4)?tT(t,4):void 0}})},A.push(M)}S=A}else S=[];u[f]=S,t.g=7;break}if("proto_list"===d.type){if(g){for(S=Array(g.size()),_=0;_<g.size();_++)S[_]=g.get(_);g.delete()}else S=[];u[f]=S,t.g=7;break}if(void 0===g){t.g=3;break}if("float_list"===d.type||"proto"===d.type){u[f]=g,t.g=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(v=s.u[f])||(v=new eb(s.h,s.G),s.u[f]=v),y(t,ex(v,g,s.I),13);case 13:b=t.h,u[f]=b;case 7:d.transform&&u[f]&&(u[f]=d.transform(u[f])),t.g=3;break;case 14:x[T]=t.h;case 3:c=m.next(),t.g=2;break;case 4:return t.return(u)}})).then(function(n){n=_(n);for(var a=0;a<e.wants.length;++a){var i=w[r[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(t.D=n)}))}}),t.i.attachMultiListener(s,o),s.delete()})(g,S.value);_=g.j,g.j={},g.setOptions(_),t.g=0})),3):y(e,(O=t,N(function(t){switch(t.g){case 1:if(!O.s)return t.return();if(!O.A){t.g=2;break}E=(A=a(O.A)).next();case 3:if(E.done){t.g=5;break}return y(t,(0,E.value)(),4);case 4:E=A.next(),t.g=3;break;case 5:O.A=void 0;case 2:if(O.B){for(M=new O.h.GraphOptionChangeRequestList,I=(k=a(O.B)).next();!I.done;I=k.next())D=I.value,M.push_back(D);O.i.changeOptions(M),M.delete(),O.B=void 0}O.s=!1,t.g=0}})),0)})},s.overrideFile=function(t,e){this.i?this.i.overrideFile(t,e):this.C[t]=e},s.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},s.send=function(t,e){var n,r,i,s,o,u,p,l,c,h=this;return N(function(m){switch(m.g){case 1:return h.g.inputs?(n=1e3*(null==e?performance.now():e),y(m,h.D,2)):m.return();case 2:return y(m,h.initialize(),3);case 3:for(r=new h.h.PacketDataList,s=(i=a(Object.keys(t))).next();!s.done;s=i.next())if(o=s.value,u=h.g.inputs[o]){e:{var f=t[o];switch(u.type){case"video":var d=h.o[u.stream];if(d||(d=new eb(h.h,h.G),h.o[u.stream]=d),0===d.l&&(d.l=d.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,v=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,v=f.naturalHeight):(g=f.width,v=f.height);v={glName:d.l,width:g,height:v},(g=d.g).canvas.width=v.width,g.canvas.height=v.height,g.activeTexture(g.TEXTURE0),d.h.bindTexture2d(d.l),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),d.h.bindTexture2d(0),d=v;break e;case"detections":for((d=h.o[u.stream])||(d=new eN(h.h),h.o[u.stream]=d),d.data||(d.data=new d.g.DetectionListData),d.data.reset(f.length),v=0;v<f.length;++v){g=f[v];var b=d.data,x=b.setBoundingBox,N=v,T=g.boundingBox,w=new eu;if(ty(w,1,T.xCenter),ty(w,2,T.yCenter),ty(w,3,T.height),ty(w,4,T.width),ty(w,5,T.rotation),ty(w,6,T.rectId),T=tJ(w,ep),x.call(b,N,T),g.landmarks)for(b=0;b<g.landmarks.length;++b){var S=!!(w=g.landmarks[b]).visibility;N=(x=d.data).addNormalizedLandmark,T=v,w=Object.assign(Object.assign({},w),{visibility:S?w.visibility:0}),ty(S=new en,1,w.x),ty(S,2,w.y),ty(S,3,w.z),w.visibility&&ty(S,4,w.visibility),w=tJ(S,er),N.call(x,T,w)}if(g.V)for(b=0;b<g.V.length;++b)N=(x=d.data).addClassification,T=v,w=g.V[b],ty(S=new t7,2,w.ga),w.index&&ty(S,1,w.index),w.label&&ty(S,3,w.label),w.displayName&&ty(S,4,w.displayName),w=tJ(S,t9),N.call(x,T,w)}d=d.data;break e;default:d={}}}switch(p=d,l=u.stream,u.type){case"video":r.pushTexture2d(Object.assign(Object.assign({},p),{stream:l,timestamp:n}));break;case"detections":(c=p).stream=l,c.timestamp=n,r.pushDetectionList(c);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return h.i.send(r),y(m,h.D,4);case 4:r.delete(),m.g=0}})},s.onResults=function(t,e){this.listeners[e||"$"]=t},S("Solution",eS),S("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(s=eO.prototype).close=function(){return this.g.close(),Promise.resolve()},s.onResults=function(t){this.g.onResults(t)},s.initialize=function(){var t=this;return N(function(e){return y(e,t.g.initialize(),0)})},s.reset=function(){this.g.reset()},s.send=function(t){var e=this;return N(function(n){return y(n,e.g.send(t),0)})},s.setOptions=function(t){this.g.setOptions(t)},S("FaceDetection",eO),S("FACEDETECTION_LIPS",el),S("FACEDETECTION_LEFT_EYE",ec),S("FACEDETECTION_LEFT_EYEBROW",eh),S("FACEDETECTION_RIGHT_EYE",em),S("FACEDETECTION_RIGHT_EYEBROW",ef),S("FACEDETECTION_FACE_OVAL",ed),S("FACEDETECTION_CONTOURS",ey),S("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),S("VERSION","0.4.1646425229")}).call(ea);var es=function(){return(es=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function eo(t,e,n,r){return new(n||(n=Promise))(function(a,i){function s(t){try{u(r.next(t))}catch(e){i(e)}}function o(t){try{u(r.throw(t))}catch(e){i(e)}}function u(t){var e;t.done?a(t.value):((e=t.value)instanceof n?e:new n(function(t){t(e)})).then(s,o)}u((r=r.apply(t,e||[])).next())})}function eu(t,e){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(o){i=[6,o],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var ep=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],el={modelType:"short",runtime:"mediapipe",maxFaces:1},ec=function(){function t(t){var e=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new ei.FaceDetection({locateFile:function(e,n){return t.solutionPath?t.solutionPath.replace(/\/+$/,"")+"/"+e:n+"/"+e}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:t.modelType}),this.faceDetectorSolution.onResults(function(t){if(e.height=t.image.height,e.width=t.image.width,e.faces=[],null!==t.detections)for(var n,r,a,i=0,s=t.detections;i<s.length;i++){var o=s[i];e.faces.push(e.normalizedToAbsolute(o.landmarks,{xMin:r=(n=o.boundingBox).xCenter-n.width/2,xMax:r+n.width,yMin:a=n.yCenter-n.height/2,yMax:a+n.height,width:n.width,height:n.height}))}})}return t.prototype.normalizedToAbsolute=function(t,e){var n=this;return{keypoints:t.map(function(t,e){return{x:t.x*n.width,y:t.y*n.height,name:ep[e]}}),box:{xMin:e.xMin*this.width,yMin:e.yMin*this.height,xMax:e.xMax*this.width,yMax:e.yMax*this.height,width:e.width*this.width,height:e.height*this.height}}},t.prototype.estimateFaces=function(t,e){return eo(this,void 0,void 0,function(){var n,r;return eu(this,function(a){switch(a.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),t instanceof S.esB?(r=ImageData.bind,[4,S.Xhn.toPixels(t)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),t.shape[1],t.shape[0]])),[3,3];case 2:n=t,a.label=3;case 3:return t=n,[4,this.faceDetectorSolution.send({image:t})];case 4:return a.sent(),[2,this.faces]}})})},t.prototype.dispose=function(){this.faceDetectorSolution.close()},t.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},t.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},t}();function eh(t){return t instanceof S.esB?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function em(t){return t instanceof S.esB?t:S.Xhn.fromPixels(t)}function ef(t,e){S.D5U.assert(0!==t.width,function(){return e+" width cannot be 0."}),S.D5U.assert(0!==t.height,function(){return e+" height cannot be 0."})}function ed(t){null==t.reduceBoxesInLowestLayer&&(t.reduceBoxesInLowestLayer=!1),null==t.interpolatedScaleAspectRatio&&(t.interpolatedScaleAspectRatio=1),null==t.fixedAnchorSize&&(t.fixedAnchorSize=!1);for(var e=[],n=0;n<t.numLayers;){for(var r=[],a=[],i=[],s=[],o=n;o<t.strides.length&&t.strides[o]===t.strides[n];){var u=ey(t.minScale,t.maxScale,o,t.strides.length);if(0===o&&t.reduceBoxesInLowestLayer)i.push(1),i.push(2),i.push(.5),s.push(.1),s.push(u),s.push(u);else{for(var p=0;p<t.aspectRatios.length;++p)i.push(t.aspectRatios[p]),s.push(u);if(t.interpolatedScaleAspectRatio>0){var l=o===t.strides.length-1?1:ey(t.minScale,t.maxScale,o+1,t.strides.length);s.push(Math.sqrt(u*l)),i.push(t.interpolatedScaleAspectRatio)}}o++}for(var c=0;c<i.length;++c){var h=Math.sqrt(i[c]);r.push(s[c]/h),a.push(s[c]*h)}var m=0,f=0;if(t.featureMapHeight.length>0)m=t.featureMapHeight[n],f=t.featureMapWidth[n];else{var d=t.strides[n];m=Math.ceil(t.inputSizeHeight/d),f=Math.ceil(t.inputSizeWidth/d)}for(var y=0;y<m;++y)for(var g=0;g<f;++g)for(var v=0;v<r.length;++v){var b={xCenter:(g+t.anchorOffsetX)/f,yCenter:(y+t.anchorOffsetY)/m,width:0,height:0};t.fixedAnchorSize?(b.width=1,b.height=1):(b.width=a[v],b.height=r[v]),e.push(b)}n=o}return e}function ey(t,e,n,r){return 1===r?.5*(t+e):t+(e-t)*n/(r-1)}function eg(t,e){var n=e[0],r=e[1];return[n*t[0]+r*t[1]+t[3],n*t[4]+r*t[5]+t[7]]}var ev,eb,ex,eN,eT,ew,eS={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},e_={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},eO={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},eA={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},eE={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},eM={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},ek={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},eI=function(){function t(t,e,n){this.detectorModel=e,this.maxFaces=n,"full"===t?(this.imageToTensorConfig=ek,this.tensorsToDetectionConfig=eE,this.anchors=ed(e_)):(this.imageToTensorConfig=eM,this.tensorsToDetectionConfig=eA,this.anchors=ed(eS));var r=(0,S.RRF)(this.anchors.map(function(t){return t.width})),a=(0,S.RRF)(this.anchors.map(function(t){return t.height})),i=(0,S.RRF)(this.anchors.map(function(t){return t.xCenter})),s=(0,S.RRF)(this.anchors.map(function(t){return t.yCenter}));this.anchorTensor={x:i,y:s,w:r,h:a}}return t.prototype.dispose=function(){this.detectorModel.dispose(),(0,S.B90)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},t.prototype.reset=function(){},t.prototype.detectFaces=function(t,e){return void 0===e&&(e=!1),eo(this,void 0,void 0,function(){var n,r,a,i,s,o,u,p,l,c;return eu(this,function(h){var m,f,d,y,g,v,b,x,N,T,w,_,O,A,E,M,k,I,D,F,C,L,R,j,P,V;switch(h.label){case 0:return null==t?(this.reset(),[2,[]]):(m=n=(0,S.lub)(function(){var n=(0,S.pju)(em(t),"float32");return e&&(n=(0,S.L9e)(S.BHj.flipLeftRight((0,S.dt4)(n,0)),[0])),n}),E=(f=this.imageToTensorConfig).outputTensorSize,M=f.keepAspectRatio,k=f.borderMode,I=f.outputTensorFloatRange,C=function(t,e,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=e.height,a=e.width;ef(e,"targetSize"),ef(t,"roi");var i,s,o=r/a,u=t.height/t.width,p=0,l=0;return o>u?(i=t.width,s=t.width*o,l=(1-u/o)/2):(i=t.height/o,s=t.height,p=(1-o/u)/2),t.width=i,t.height=s,{top:l,left:p,right:p,bottom:l}}(F={xCenter:.5*(d=D=eh(m)).width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0},E,M),y=D.width,g=D.height,v=F.width,b=F.height,x=Math.cos(F.rotation),N=Math.sin(F.rotation),T=F.xCenter,w=F.yCenter,_=1/y,O=1/g,(A=Array(16))[0]=v*x*1*_,A[1]=-b*N*_,A[2]=0,A[3]=(-.5*v*x*1+.5*b*N+T)*_,A[4]=v*N*1*O,A[5]=b*x*O,A[6]=0,A[7]=(-.5*b*x-.5*v*N*1+w)*O,A[8]=0,A[9]=0,A[10]=v*_,A[11]=0,A[12]=0,A[13]=0,A[14]=0,A[15]=1,L=function(t){if(16!==t.length)throw Error("Array length must be 16 but got "+t.length);return[[t[0],t[1],t[2],t[3]],[t[4],t[5],t[6],t[7]],[t[8],t[9],t[10],t[11]],[t[12],t[13],t[14],t[15]]]}(A),a=(r={imageTensor:(0,S.lub)(function(){var t,e,n,r=em(m),a=(0,S.odF)((ef(E,"inputResolution"),[1/E.width*L[0][0]*D.width,1/E.height*L[0][1]*D.width,L[0][3]*D.width,1/E.width*L[1][0]*D.height,1/E.height*L[1][1]*D.height,L[1][3]*D.height,0,0]),[1,8]),i=S.BHj.transform((0,S.dt4)((0,S.pju)(r,"float32")),a,"bilinear","zero"===k?"constant":"nearest",0,[E.height,E.width]);return null!=I?(t=I[0],n={scale:e=(I[1]-t)/255,offset:t-0*e},(0,S.lub)(function(){return(0,S.IHx)((0,S.dC7)(i,n.scale),n.offset)})):i}),padding:C,transformationMatrix:L}).imageTensor,i=r.transformationMatrix,R=s=this.detectorModel.execute(a,"Identity:0"),u=(o=(0,S.lub)(function(){var t=(0,S.lub)(function(){return[(0,S.tPi)(R,[0,0,0],[1,-1,1]),(0,S.tPi)(R,[0,0,1],[1,-1,-1])]}),e=t[0],n=t[1];return{boxes:(0,S.L9e)(n),logits:(0,S.L9e)(e)}})).boxes,[4,function(t,e,n){return eo(this,void 0,void 0,function(){var r,a,i,s;return eu(this,function(o){switch(o.label){case 0:var u;return r=t[0],u=t[1],[4,function(t,e,n){return eo(this,void 0,void 0,function(){var r,a,i,s,o,u,p,l,c,h,m,f;return eu(this,function(d){switch(d.label){case 0:return r=[],[4,t.data()];case 1:return a=d.sent(),[4,e.data()];case 2:for(i=d.sent(),s=0;s<n.numBoxes;++s){var y,g,v,b,x,N;if(!(null!=n.minScoreThresh&&i[s]<n.minScoreThresh||(p=(y=a[(o=s*n.numCoords)+0],g=a[o+1],v=a[o+2],b=a[o+3],x=i[s],u={score:[x],ind:s,locationData:{relativeBoundingBox:{xMin:g,yMin:(N=n.flipVertically)?1-v:y,xMax:b,yMax:N?1-y:v,width:b-g,height:v-y}}}).locationData.relativeBoundingBox).width<0||p.height<0)){if(n.numKeypoints>0)for((l=u.locationData).relativeKeypoints=[],c=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<c;h+=n.numValuesPerKeypoint)f={x:a[(m=o+n.keypointCoordOffset+h)+0],y:n.flipVertically?1-a[m+1]:a[m+1]},l.relativeKeypoints.push(f);r.push(u)}}return[2,r]}})})}(a=(0,S.lub)(function(){n.reverseOutputOrder?(r=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+0],[-1,1])),t=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+1],[-1,1])),i=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+2],[-1,1])),a=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+3],[-1,1]))):(t=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+0],[-1,1])),r=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+1],[-1,1])),a=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+2],[-1,1])),i=(0,S.L9e)((0,S.tPi)(u,[0,n.boxCoordOffset+3],[-1,1]))),r=(0,S.IHx)((0,S.dC7)((0,S.hiC)(r,n.xScale),e.w),e.x),t=(0,S.IHx)((0,S.dC7)((0,S.hiC)(t,n.yScale),e.h),e.y),n.applyExponentialOnBoxSize?(a=(0,S.dC7)((0,S.Qqt)((0,S.hiC)(a,n.hScale)),e.h),i=(0,S.dC7)((0,S.Qqt)((0,S.hiC)(i,n.wScale)),e.w)):(a=(0,S.dC7)((0,S.hiC)(a,n.hScale),e.h),i=(0,S.dC7)((0,S.hiC)(i,n.wScale),e.h));var t,r,a,i,s=(0,S.luU)(t,(0,S.hiC)(a,2)),o=(0,S.luU)(r,(0,S.hiC)(i,2)),p=(0,S.IHx)(t,(0,S.hiC)(a,2)),l=(0,S.IHx)(r,(0,S.hiC)(i,2)),c=(0,S.zoF)([(0,S.XLQ)(s,[n.numBoxes,1]),(0,S.XLQ)(o,[n.numBoxes,1]),(0,S.XLQ)(p,[n.numBoxes,1]),(0,S.XLQ)(l,[n.numBoxes,1])],1);if(n.numKeypoints)for(var h=0;h<n.numKeypoints;++h){var m=n.keypointCoordOffset+h*n.numValuesPerKeypoint,f=void 0,d=void 0;n.reverseOutputOrder?(f=(0,S.L9e)((0,S.tPi)(u,[0,m],[-1,1])),d=(0,S.L9e)((0,S.tPi)(u,[0,m+1],[-1,1]))):(d=(0,S.L9e)((0,S.tPi)(u,[0,m],[-1,1])),f=(0,S.L9e)((0,S.tPi)(u,[0,m+1],[-1,1])));var y=(0,S.IHx)((0,S.dC7)((0,S.hiC)(f,n.xScale),e.w),e.x),g=(0,S.IHx)((0,S.dC7)((0,S.hiC)(d,n.yScale),e.h),e.y);c=(0,S.zoF)([c,(0,S.XLQ)(y,[n.numBoxes,1]),(0,S.XLQ)(g,[n.numBoxes,1])],1)}return c}),i=(0,S.lub)(function(){var t=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(t=(0,S.iUl)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),t=(0,S.XD2)(t)):t}),n)];case 1:return s=o.sent(),(0,S.B90)([a,i]),[2,s]}})})}([p=o.logits,u],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return 0===(l=h.sent()).length?((0,S.B90)([n,a,s,p,u]),[2,l]):[4,function(t,e,n,r){return eo(this,void 0,void 0,function(){var n,r,a,i,s;return eu(this,function(o){switch(o.label){case 0:return t.sort(function(t,e){return Math.max.apply(Math,e.score)-Math.max.apply(Math,t.score)}),n=(0,S.odF)(t.map(function(t){return[t.locationData.relativeBoundingBox.yMin,t.locationData.relativeBoundingBox.xMin,t.locationData.relativeBoundingBox.yMax,t.locationData.relativeBoundingBox.xMax]})),r=(0,S.RRF)(t.map(function(t){return t.score[0]})),[4,S.BHj.nonMaxSuppressionAsync(n,r,e,.3)];case 1:return[4,(a=o.sent()).array()];case 2:return i=o.sent(),s=t.filter(function(t,e){return i.indexOf(e)>-1}),(0,S.B90)([n,r,a]),[2,s]}})})}(l,this.maxFaces,0)];case 2:return j=h.sent(),P=i,void 0===j&&(j=[]),V=[].concat.apply([],P),j.forEach(function(t){var e=t.locationData;e.relativeKeypoints.forEach(function(t){var e=eg(V,[t.x,t.y]),n=e[0],r=e[1];t.x=n,t.y=r});var n=e.relativeBoundingBox,r=Number.MAX_VALUE,a=Number.MAX_VALUE,i=Number.MIN_VALUE,s=Number.MIN_VALUE;[[n.xMin,n.yMin],[n.xMin+n.width,n.yMin],[n.xMin+n.width,n.yMin+n.height],[n.xMin,n.yMin+n.height]].forEach(function(t){var e=eg(V,t),n=e[0],o=e[1];r=Math.min(r,n),i=Math.max(i,n),a=Math.min(a,o),s=Math.max(s,o)}),e.relativeBoundingBox={xMin:r,xMax:i,yMin:a,yMax:s,width:i-r,height:s-a}}),c=j,(0,S.B90)([n,a,s,p,u]),[2,c]}})})},t.prototype.estimateFaces=function(t,e){return eo(this,void 0,void 0,function(){var n,r;return eu(this,function(a){return n=eh(t),r=!!e&&e.flipHorizontal,[2,this.detectFaces(t,r).then(function(t){return t.map(function(t){for(var e=t.locationData.relativeKeypoints.map(function(t,e){return es(es({},t),{x:t.x*n.width,y:t.y*n.height,name:ep[e]})}),r=t.locationData.relativeBoundingBox,a=0,i=["width","xMax","xMin"];a<i.length;a++)r[i[a]]*=n.width;for(var s=0,o=["height","yMax","yMin"];s<o.length;s++)r[o[s]]*=n.height;return{keypoints:e,box:r}})})]})})},t}();function eD(t){return t.width*t.height}function eF(t){var e=t.xCenter-t.width/2,n=e+t.width,r=t.yCenter-t.height/2;return{xMin:e,xMax:n,yMin:r,yMax:r+t.height,width:t.width,height:t.height}}function eC(t){return t instanceof S.esB?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function eL(t){return t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))}function eR(t){return t instanceof S.esB?t:S.Xhn.fromPixels(t)}function ej(t,e){S.D5U.assert(0!==t.width,function(){return e+" width cannot be 0."}),S.D5U.assert(0!==t.height,function(){return e+" height cannot be 0."})}function eP(t){return{xCenter:t.xMin+t.width/2,yCenter:t.yMin+t.height/2,width:t.width,height:t.height}}function eV(t){var e=t.relativeKeypoints;if(e.length<=1)throw Error("2 or more keypoints required to calculate a rect.");var n=Number.MAX_VALUE,r=Number.MAX_VALUE,a=Number.MIN_VALUE,i=Number.MIN_VALUE;return e.forEach(function(t){n=Math.min(n,t.x),a=Math.max(a,t.x),r=Math.min(r,t.y),i=Math.max(i,t.y)}),{xCenter:(n+a)/2,yCenter:(r+i)/2,width:a-n,height:i-r}}function eB(t,e,n,r,a){var i,s,o,u,p,l,c,h,m="rect"===n?function(t,e,n){var r,a=t.locationData;if("boundingbox"===e)r=eP(a.boundingBox);else{r=eV(a);var i=n.width,s=n.height;r.xCenter=Math.round(r.xCenter*i),r.yCenter=Math.round(r.yCenter*s),r.width=Math.round(r.width*i),r.height=Math.round(r.height*s)}return r}(t,e,r):(i=t.locationData,"boundingbox"===e?eP(i.relativeBoundingBox):eV(i));return a&&(m.rotation=(o=t.locationData,u=a.rotationVectorStartKeypointIndex,p=a.rotationVectorEndKeypointIndex,s=a.rotationVectorTargetAngle?a.rotationVectorTargetAngle:Math.PI*a.rotationVectorTargetAngleDegree/180,l=o.relativeKeypoints[u].x*r.width,c=o.relativeKeypoints[u].y*r.height,h=o.relativeKeypoints[p].x*r.width,eL(s-Math.atan2(-(o.relativeKeypoints[p].y*r.height-c),h-l)))),m}function ez(t,e,n,r){return t0(this,void 0,void 0,function(){var a,i,s,o,u,p,l;return t6(this,function(c){switch(c.label){case 0:return n=n||e.flipHorizontally||!1,r=r||e.flipVertically||!1,a=t.size/e.numLandmarks,[4,t.data()];case 1:for(i=c.sent(),s=[],o=0;o<e.numLandmarks;++o){var h,m;u=o*a,(l={x:0,y:0}).x=n?e.inputImageWidth-i[u]:i[u],a>1&&(l.y=r?e.inputImageHeight-i[u+1]:i[u+1]),a>2&&(l.z=i[u+2]),a>3&&(l.score=(h=e.visibilityActivation,m=i[u+3],"none"===h?m:1/(1+Math.exp(-m)))),s.push(l)}for(p=0;p<s.length;++p)(l=s[p]).x=l.x/e.inputImageWidth,l.y=l.y/e.inputImageHeight,l.z=l.z/e.inputImageWidth/(e.normalizeZ||1);return[2,s]}})})}function eU(t,e,n){var r,a=t.width,i=t.height,s=t.rotation;if(null==n.rotation&&null==n.rotationDegree||(r=s,null!=n.rotation?r+=n.rotation:null!=n.rotationDegree&&(r+=Math.PI*n.rotationDegree/180),s=eL(r)),0===s)t.xCenter=t.xCenter+a*n.shiftX,t.yCenter=t.yCenter+i*n.shiftY;else{var o=(e.width*a*n.shiftX*Math.cos(s)-e.height*i*n.shiftY*Math.sin(s))/e.width,u=(e.width*a*n.shiftX*Math.sin(s)+e.height*i*n.shiftY*Math.cos(s))/e.height;t.xCenter=t.xCenter+o,t.yCenter=t.yCenter+u}if(n.squareLong){var p=Math.max(a*e.width,i*e.height);a=p/e.width,i=p/e.height}else if(n.squareShort){var l=Math.min(a*e.width,i*e.height);a=l/e.width,i=l/e.height}return t.width=a*n.scaleX,t.height=i*n.scaleY,t}(ew||(ew={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var e$,eH={runtime:"tfjs",maxFaces:1,refineLandmarks:!1,landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"},eG={flipHorizontal:!1,staticImageMode:!1},eW={shiftX:0,shiftY:0,scaleX:1.5,scaleY:1.5,squareLong:!0},eX={outputTensorSize:{width:192,height:192},outputTensorFloatRange:[0,1],borderMode:"replicate"},eq={numLandmarks:468,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},eK={numLandmarks:80,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},eY={numLandmarks:71,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},eQ={numLandmarks:5,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},eJ={indexesMapping:Array.from(Array(468).keys()),zRefinement:"copy"},eZ={indexesMapping:[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],zRefinement:"none"},e1={indexesMapping:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],zRefinement:"none"},e2={indexesMapping:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],zRefinement:"none"},e3={indexesMapping:[468,469,470,471,472],zRefinement:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173]},e4={indexesMapping:[473,474,475,476,477],zRefinement:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398]},e0=function(){function t(t,e,n,r){this.detector=t,this.landmarkModel=e,this.maxFaces=n,this.withAttention=r,this.prevFaceRectsFromLandmarks=null}return t.prototype.estimateFaces=function(t,e){return t0(this,void 0,void 0,function(){var n,r,a,i,s,o,u,p,l,c,h,m,f=this;return t6(this,function(d){var y;switch(d.label){case 0:return n=function(t){if(null==t)return t4({},eG);var e=t4({},t);return null==e.flipHorizontal&&(e.flipHorizontal=eG.flipHorizontal),null==e.staticImageMode&&(e.staticImageMode=eG.staticImageMode),e}(e),null==t?(this.reset(),[2,[]]):(r=eC(t),a=S.lub(function(){var e=S.pju(eR(t),"float32");return n.flipHorizontal&&(e=S.L9e(S.BHj.flipLeftRight(S.dt4(e,0)),[0])),e}),i=this.prevFaceRectsFromLandmarks,n.staticImageMode||null==i||i.length<this.maxFaces?[4,this.detector.detectFaces(a,!1)]:[3,2]);case 1:return 0===(o=d.sent()).length?(this.reset(),a.dispose(),[2,[]]):(s=o.map(function(t){return f.faceDetectionFrontDetectionToRoi(t,r)}),[3,3]);case 2:s=[],d.label=3;case 3:return y=[],[s,i||[]].forEach(function(t){return t.forEach(function(t){(y=y.filter(function(e){return .5>=function(t,e){var n,r,a,i,s=eF(t),o=eF(e);if(s.xMax<o.xMin||o.xMax<s.xMin||s.yMax<o.yMin||o.yMax<s.yMin)return 0;var u=eD((n=Math.max(s.xMin,o.xMin),{xMin:n,xMax:r=Math.min(s.xMax,o.xMax),yMin:a=Math.max(s.yMin,o.yMin),yMax:i=Math.min(s.yMax,o.yMax),width:Math.max(r-n,0),height:Math.max(i-a,0)})),p=eD(s)+eD(o)-u;return p>0?u/p:0}(t,e)})).push(t)})}),[4,Promise.all(y.map(function(t){return f.faceLandmark(t,a)}))];case 4:for(u=d.sent(),p=[],this.prevFaceRectsFromLandmarks=[],l=0;l<u.length;++l)null!=(c=u[l])&&(this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(c,r)),null!=(h=function(t,e){return t.map(function(t){var n=t4(t4({},t),{x:t.x*e.width,y:t.y*e.height});return null!=t.z&&(n.z=t.z*e.width),n})}(c,r))&&h.forEach(function(t,e){var n=et.get(e);null!=n&&(t.name=n)}),m=ee(h),p.push({keypoints:h,box:m.locationData.relativeBoundingBox}));return a.dispose(),[2,p]}})})},t.prototype.dispose=function(){this.detector.dispose(),this.landmarkModel.dispose()},t.prototype.reset=function(){this.detector.reset(),this.prevFaceRectsFromLandmarks=null},t.prototype.faceDetectionFrontDetectionToRoi=function(t,e){return eU(eB(t,"boundingbox","normRect",e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:0}),e,eW)},t.prototype.faceLandmark=function(t,e){return t0(this,void 0,void 0,function(){var n,r,a,i,s,o,u;return t6(this,function(p){switch(p.label){case 0:var l,c,h,m,f,d,y,g,v,b,x,N,T,w,_,O,A,E,M,k;return n=(T=eX.outputTensorSize,w=eX.keepAspectRatio,_=eX.borderMode,O=eX.outputTensorFloatRange,M=function(t,e,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=e.height,a=e.width;ej(e,"targetSize"),ej(t,"roi");var i,s,o=r/a,u=t.height/t.width,p=0,l=0;return o>u?(i=t.width,s=t.width*o,l=(1-u/o)/2):(i=t.height/o,s=t.height,p=(1-o/u)/2),t.width=i,t.height=s,{top:l,left:p,right:p,bottom:l}}((l=A=eC(e),E=t?{xCenter:t.xCenter*l.width,yCenter:t.yCenter*l.height,width:t.width*l.width,height:t.height*l.height,rotation:t.rotation}:{xCenter:.5*l.width,yCenter:.5*l.height,width:l.width,height:l.height,rotation:0}),T,w),c=A.width,h=A.height,m=E.width,f=E.height,d=Math.cos(E.rotation),y=Math.sin(E.rotation),g=E.xCenter,v=E.yCenter,b=1/c,x=1/h,(N=Array(16))[0]=m*d*1*b,N[1]=-f*y*b,N[2]=0,N[3]=(-.5*m*d*1+.5*f*y+g)*b,N[4]=m*y*1*x,N[5]=f*d*x,N[6]=0,N[7]=(-.5*f*d-.5*m*y*1+v)*x,N[8]=0,N[9]=0,N[10]=m*b,N[11]=0,N[12]=0,N[13]=0,N[14]=0,N[15]=1,k=function(t){if(16!==t.length)throw Error("Array length must be 16 but got "+t.length);return[[t[0],t[1],t[2],t[3]],[t[4],t[5],t[6],t[7]],[t[8],t[9],t[10],t[11]],[t[12],t[13],t[14],t[15]]]}(N),{imageTensor:S.lub(function(){var t,n=eR(e),r=S.odF((ej(T,"inputResolution"),[1/T.width*k[0][0]*A.width,1/T.height*k[0][1]*A.width,k[0][3]*A.width,1/T.width*k[1][0]*A.height,1/T.height*k[1][1]*A.height,k[1][3]*A.height,0,0]),[1,8]),a=S.BHj.transform(S.dt4(S.pju(n,"float32")),r,"bilinear","zero"===_?"constant":"nearest",0,[T.height,T.width]);return null!=O?(t=function(t,e,n,r){var a=255-t;if(0===a)throw Error("Original min and max are both "+t+", range cannot be 0.");var i=(r-n)/a;return{scale:i,offset:n-t*i}}(0,0,O[0],O[1]),S.lub(function(){return S.IHx(S.dC7(a,t.scale),t.offset)})):a}),padding:M,transformationMatrix:k}).imageTensor,r=["output_faceflag"].concat(this.withAttention?["output_mesh_identity","output_lips","Identity_6:0","Identity_1:0","Identity_2:0","Identity_5:0"]:["output_mesh"]),i=(a=this.landmarkModel.execute(n,r))[0],s=a.slice(1),[4,i.data()];case 1:return p.sent()[0]<.5?(S.B90(a),S.B90(n),[2,null]):this.withAttention?[4,this.tensorsToFaceLandmarksWithAttention(s)]:[3,3];case 2:return o=p.sent(),[3,5];case 3:return[4,this.tensorsToFaceLandmarks(s)];case 4:o=p.sent(),p.label=5;case 5:return u=function(t,e,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],a=0;a<t.length;a++){var i=t[a],s=i.x-.5,o=i.y-.5,u=n.ignoreRotation?0:e.rotation,p=Math.cos(u)*s-Math.sin(u)*o,l=Math.sin(u)*s+Math.cos(u)*o;p=p*e.width+e.xCenter,l=l*e.height+e.yCenter;var c=i.z*e.width,h=t4({},i);h.x=p,h.y=l,h.z=c,r.push(h)}return r}(o,t),S.B90(a),S.B90(n),[2,u]}})})},t.prototype.tensorsToFaceLandmarks=function(t){return t0(this,void 0,void 0,function(){return t6(this,function(e){return[2,ez(t[0],eq)]})})},t.prototype.tensorsToFaceLandmarksWithAttention=function(t){return t0(this,void 0,void 0,function(){var e,n,r,a,i;return t6(this,function(s){switch(s.label){case 0:return[4,ez(t[0],eq)];case 1:return e=s.sent(),[4,ez(t[1],eK)];case 2:return n=s.sent(),[4,ez(t[3],eY)];case 3:return r=s.sent(),[4,ez(t[5],eY)];case 4:return a=s.sent(),[4,ez(t[4],eQ)];case 5:return i=s.sent(),[4,ez(t[2],eQ)];case 6:return[2,function(t,e){for(var n=function(t){var e=[].concat.apply([],t.map(function(t){return t.indexesMapping}));if(0===e.length)throw Error("There should be at least one landmark in indexes mapping");var n=e[0],r=e[0],a=new Set(e);a.forEach(function(t){n=Math.min(n,t),r=Math.max(r,t)});var i=a.size;if(0!==n)throw Error("Indexes are expected to start with 0 instead of "+n);if(r+1!==i)throw Error("Indexes should have no gaps but "+(r-i+1)+" indexes are missing");return i}(e),r=Array(n).fill(null).map(Object),a=0;a<t.length;++a){var i=t[a],s=e[a];if(i.length!==s.indexesMapping.length)throw Error("There are "+i.length+" refinement landmarks while mapping has "+s.indexesMapping.length);(function(t,e,n){for(var r=0;r<e.length;++r){var a=e[r],i=n[t[r]];i.x=a.x,i.y=a.y}})(s.indexesMapping,i,r),function(t,e,n,r){if("string"==typeof e){if("copy"===e)for(var a=0;a<n.length;++a)r[t[a]].z=n[a].z}else{var i=function(t,e){for(var n=0,r=0;r<e.length;++r)n+=t[e[r]].z;return n/e.length}(r,e);for(a=0;a<t.length;++a)r[t[a]].z=i}}(s.indexesMapping,s.zRefinement,i,r)}return r}([e,n,r,a,i,s.sent()],[eJ,eZ,e1,e2,e3,e4])]}})})},t.prototype.faceLandmarksToRoi=function(t,e){return eU(eB(ee(t),"boundingbox","normRect",e,{rotationVectorStartKeypointIndex:33,rotationVectorEndKeypointIndex:263,rotationVectorTargetAngleDegree:0}),e,eW)},t}();function e6(t,e){return t0(this,void 0,void 0,function(){var n;return t6(this,function(r){if(t===e$.MediaPipeFaceMesh){if(n=void 0,null!=e){if("tfjs"===e.runtime)return[2,function(t){return t0(this,void 0,void 0,function(){var e,n,r,a;return t6(this,function(i){switch(i.label){case 0:return n="string"==typeof(e=function(t){if(null==t)return t4({},eH);var e=t4({},t);return e.runtime="tfjs",null==e.maxFaces&&(e.maxFaces=eH.maxFaces),null==e.refineLandmarks&&(e.refineLandmarks=eH.refineLandmarks),null==e.landmarkModelUrl&&(e.landmarkModelUrl=e.refineLandmarks?"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1":"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"),e}(t)).landmarkModelUrl&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,t3(e.landmarkModelUrl,{fromTFHub:n})];case 1:return r=i.sent(),[4,function(t,e){return eo(this,void 0,void 0,function(){var n;return eu(this,function(r){if(t===ew.MediaPipeFaceDetector){if(n=void 0,null!=e){if("tfjs"===e.runtime)return[2,function(t){return eo(this,void 0,void 0,function(){var e,n,r;return eu(this,function(a){switch(a.label){case 0:return n="string"==typeof(e=function(t){if(null==t)return es({},eO);var e=es({},t);return null==e.modelType&&(e.modelType=eO.modelType),null==e.maxFaces&&(e.maxFaces=eO.maxFaces),null==e.detectorModelUrl&&("full"===e.modelType?e.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":e.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),e}(t)).detectorModelUrl&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,t3(e.detectorModelUrl,{fromTFHub:n})];case 1:return r=a.sent(),[2,new eI(e.modelType,r,e.maxFaces)]}})})}(e)];if("mediapipe"===e.runtime)return[2,function(t){return eo(this,void 0,void 0,function(){var e,n;return eu(this,function(r){switch(r.label){case 0:return e=function(t){if(null==t)return es({},el);var e=es({},t);return e.runtime="mediapipe",null==e.modelType&&(e.modelType=el.modelType),null==e.maxFaces&&(e.maxFaces=el.maxFaces),e}(t),[4,(n=new ec(e)).initialize()];case 1:return r.sent(),[2,n]}})})}(e)];n=e.runtime}throw Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+n)}throw Error(t+" is not a supported model name.")})})}(ew.MediaPipeFaceDetector,{modelType:"short",maxFaces:e.maxFaces,detectorModelUrl:e.detectorModelUrl,runtime:e.runtime})];case 2:return a=i.sent(),[2,new e0(a,r,e.maxFaces,e.refineLandmarks)]}})})}(e)];if("mediapipe"===e.runtime)return[2,function(t){return t0(this,void 0,void 0,function(){var e,n;return t6(this,function(r){switch(r.label){case 0:return e=function(t){if(null==t)return t4({},en);var e=t4({},t);return e.runtime="mediapipe",null==e.maxFaces&&(e.maxFaces=en.maxFaces),null==e.refineLandmarks&&(e.refineLandmarks=en.refineLandmarks),e}(t),[4,(n=new er(e)).initialize()];case 1:return r.sent(),[2,n]}})})}(e)];n=e.runtime}throw Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+n)}throw Error(t+" is not a supported model name.")})})}(e$||(e$={})).MediaPipeFaceMesh="MediaPipeFaceMesh";var e5=Object.freeze({__proto__:null,getKeypointIndexByContour:function(t){if(t===e$.MediaPipeFaceMesh)return t7;throw Error("Model "+t+" is not supported.")},getAdjacentPairs:function(t){if(t===e$.MediaPipeFaceMesh)return t9;throw Error("Model "+t+" is not supported.")}})}}]);